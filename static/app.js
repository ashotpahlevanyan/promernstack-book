!function(e){function t(t){for(var a,r,u=t[0],i=t[1],s=t[2],f=0,d=[];f<u.length;f++)r=u[f],o[r]&&d.push(o[r][0]),o[r]=0;for(a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a]);for(c&&c(t);d.length;)d.shift()();return l.push.apply(l,s||[]),n()}function n(){for(var e,t=0;t<l.length;t++){for(var n=l[t],a=!0,u=1;u<n.length;u++){var i=n[u];0!==o[i]&&(a=!1)}a&&(l.splice(t--,1),e=r(r.s=n[0]))}return e}var a={},o={1:0},l=[];function r(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=a,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="./";var u=window.webpackJsonp=window.webpackJsonp||[],i=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var c=i;l.push([694,0]),n()}({121:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=u(n(0)),l=n(120),r=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"componentDidUpdate",value:function(){this.props.showing&&clearTimeout(this.dismissTimer)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.dismissTimer)}},{key:"render",value:function(){return o.default.createElement(l.Collapse,{isOpen:this.props.showing},o.default.createElement("div",{style:{position:"fixed",top:30,left:0,right:0,textAlign:"center"}},o.default.createElement(l.Alert,{style:{display:"inline-block",width:500},color:this.props.bsStyle,toggle:this.props.onDismiss,isOpen:!0},this.props.message)))}}]),t}();t.default=i,i.propTypes={showing:r.default.bool.isRequired,onDismiss:r.default.func.isRequired,color:r.default.string,message:r.default.shape({}).isRequired},i.defaultProps={color:"success"}},277:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=u(n(0)),l=n(76),r=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=[{title:"First Article",key:"first",text:"Hello from First article"},{title:"Second Article",key:"second",text:"Hello from Second article"},{title:"Third Article",key:"third",text:"Hello from Third article"},{title:"Fourth Article",key:"fourth",text:"Hello from Fourth article"}],s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"render",value:function(){var e=this,t=i.filter(function(t){return t.key===e.props.match.params.articleId})[0];return t?o.default.createElement("div",null,o.default.createElement("h3",{className:"title"},t.title),o.default.createElement("hr",null),o.default.createElement("p",{className:"text"},t.text)):o.default.createElement("div",null,"No Article with that key")}}]),t}(),c=function(e){var t=e.match;return o.default.createElement("div",{className:"articles"},o.default.createElement("h2",null,"Articles section"),o.default.createElement("ul",{className:"articles"},i.map(function(e){return o.default.createElement("li",{className:"article",key:e.key},o.default.createElement(l.Link,{to:t.url+"/"+e.key},e.title))})),o.default.createElement(l.Route,{path:t.url+"/:articleId",component:s}))};s.propTypes={match:r.default.shape({params:r.default.shape({articleId:r.default.string.isRequired})}).isRequired},c.propTypes={match:r.default.shape({}).isRequired},t.default=c},278:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,o=n(0),l=(a=o)&&a.__esModule?a:{default:a};t.default=function(){return l.default.createElement("p",null,"Page Not Fount")}},280:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=f(n(0)),l=n(76),r=f(n(2)),u=f(n(122)),i=f(n(279)),s=n(120),c=f(n(121));function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={showing:!1,toastVisible:!1,toastMessage:"",toastType:"success"},n.showModal=n.showModal.bind(n),n.hideModal=n.hideModal.bind(n),n.submit=n.submit.bind(n),n.showError=n.showError.bind(n),n.dismissToast=n.dismissToast.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"showModal",value:function(){this.setState({showing:!0})}},{key:"hideModal",value:function(){this.setState({showing:!1})}},{key:"showError",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"danger"})}},{key:"dismissToast",value:function(){this.setState({toastVisible:!1})}},{key:"submit",value:function(e){var t=this;e.preventDefault(),this.hideModal();var n=document.forms.issueAdd,a={owner:n.owner.value,title:n.title.value,status:"New",created:new Date};fetch("/api/issues/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}).then(function(e){e.ok?e.json().then(function(e){t.props.history.push("/issues/"+e._id)}):e.json().then(function(e){t.showError("Failed to add issue: "+e.message)})}).catch(function(e){t.showError("Error in sending data to server: "+e.message)})}},{key:"render",value:function(){return o.default.createElement(Link,{onClick:this.showModal},o.default.createElement(u.default,{icon:i.default}),"Â Create Issue",o.default.createElement(s.Modal,{isOpen:this.state.showing,toggle:this.hideModal},o.default.createElement(s.ModalHeader,{toggle:this.hideModal},"Create Issue"),o.default.createElement(s.ModalBody,null,o.default.createElement(s.Form,{name:"issueAdd"},o.default.createElement(s.FormGroup,null,o.default.createElement(s.Label,null,"Title"),o.default.createElement(s.Input,{name:"title",autoFocus:!0})),o.default.createElement(s.FormGroup,null,o.default.createElement(s.Label,null,"Owner"),o.default.createElement(s.Input,{name:"owner"})))),o.default.createElement(s.ModalFooter,null,o.default.createElement("div",null,o.default.createElement(s.Button,{type:"button",className:"primary",onClick:this.submit},"Submit"),o.default.createElement(s.Button,{className:"default",onClick:this.hideModal},"Cancel")))),o.default.createElement(c.default,{showing:this.state.toastVisible,message:this.state.toastMessage,onDismiss:this.dismissToast,bsStyle:this.state.toastType}))}}]),t}();d.propTypes={history:r.default.shape({push:r.default.func.isRequired}).isRequired},t.default=(0,l.withRouter)(d)},283:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Footer=t.Home=void 0;var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=d(n(0)),l=n(120),r=n(186),u=n(76),i=d(n(122)),s=d(n(282)),c=d(n(281)),f=d(n(280));function d(e){return e&&e.__esModule?e:{default:e}}var p=o.default.createElement(u.Link,{to:"/home"},"Issue Tracker"),h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.toggle=n.toggle.bind(n),n.dropdownToggle=n.dropdownToggle.bind(n),n.state={isOpen:!1,dropdownOpen:!1,collapsed:!0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"toggle",value:function(){this.setState({isOpen:!this.state.isOpen})}},{key:"dropdownToggle",value:function(){this.setState({dropdownOpen:!this.state.dropdownOpen})}},{key:"render",value:function(){return o.default.createElement(l.Navbar,{expand:"md"},o.default.createElement(l.NavbarBrand,null,p),o.default.createElement(l.NavbarToggler,{onClick:this.toggle},o.default.createElement(i.default,{icon:c.default})),o.default.createElement(l.Collapse,{isOpen:this.state.isOpen,navbar:!0},o.default.createElement(l.Nav,{navbar:!0},o.default.createElement(l.NavItem,{active:!0},o.default.createElement(r.LinkContainer,{to:"/home"},o.default.createElement(l.NavLink,null,"Home"))),o.default.createElement(l.NavItem,null,o.default.createElement(r.LinkContainer,{to:"/issues"},o.default.createElement(l.NavLink,null,"Issues"))),o.default.createElement(l.NavItem,null,o.default.createElement(r.LinkContainer,{to:"/reports"},o.default.createElement(l.NavLink,null,"Reports"))),o.default.createElement(l.NavItem,null,o.default.createElement(r.LinkContainer,{to:"/articles"},o.default.createElement(l.NavLink,null,"Articles"))),o.default.createElement(f.default,null),o.default.createElement(l.Dropdown,{nav:!0,isOpen:this.state.dropdownOpen,toggle:this.dropdownToggle},o.default.createElement(l.DropdownToggle,{id:"user-dropdown",className:"btn-link"},o.default.createElement(i.default,{icon:s.default})),o.default.createElement(l.DropdownMenu,null,o.default.createElement(l.DropdownItem,null,"Logout"))))))}}]),t}();t.default=h,t.Home=function(){return o.default.createElement("div",{className:"home"},o.default.createElement("h1",null,"Home Section contents"))},t.Footer=function(){return o.default.createElement("div",{className:"footer"},o.default.createElement("h5",null,o.default.createElement("small",null," Full source code available at this Â ",o.default.createElement("a",{href:"https://github.com/ashotpahlevanyan/promernstack-book"},"Github repository"))))}},284:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=u(n(0)),r=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={value:t.editFormat(e.value),focused:!1,valid:!0},n.onBlur=n.onBlur.bind(n),n.onChange=n.onChange.bind(n),n.onFocus=n.onFocus.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),o(t,null,[{key:"displayFormat",value:function(e){return null!=e&&""!==e?new Date(e).toDateString():""}},{key:"editFormat",value:function(e){return null!=e&&""!==e?new Date(e).toISOString().substr(0,10):""}},{key:"unformat",value:function(e){var t=new Date(e);return Number.isNaN(t.getTime())?null:t}}]),o(t,[{key:"componentWillReceiveProps",value:function(e){e.value!==this.props.value&&this.setState({value:t.editFormat(e.value)})}},{key:"onFocus",value:function(){this.setState({focused:!0})}},{key:"onBlur",value:function(e){var n=t.unformat(this.state.value),a=""===this.state.value||null!=n;a!==this.state.valid&&this.props.onValidityChange&&this.props.onValidityChange(e,a),this.setState({focused:!1,valid:a}),a&&this.props.onChange(e,n)}},{key:"onChange",value:function(e){e.target.value.match(/^[\d-]*$/)&&this.setState({value:e.target.value})}},{key:"render",value:function(){var e=this.state.focused||!this.state.valid?this.state.value:t.displayFormat(this.props.value),n=Object.assign({},this.props);return delete n.onValidityChange,l.default.createElement("input",a({type:"text"},n,{value:e,placeholder:this.state.focused?"yyyy-mm-dd":null,onFocus:this.onFocus,onBlur:this.onBlur,onChange:this.onChange}))}}]),t}();t.default=i,i.propTypes={value:r.default.shape({}).isRequired,onChange:r.default.func.isRequired,onValidityChange:r.default.func.isRequired,name:r.default.string.isRequired}},285:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=u(n(0)),r=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={value:t.format(n.props.value)},n.onChange=n.onChange.bind(n),n.onBlur=n.onBlur.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),o(t,null,[{key:"format",value:function(e){return null!=e?e.toString():""}},{key:"unformat",value:function(e){var t=parseInt(e,10);return Number.isNaN(t)?null:t}}]),o(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({value:t.format(e.value)})}},{key:"onBlur",value:function(e){this.props.onChange(e,t.unformat(this.state.value))}},{key:"onChange",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({value:e.target.value})}},{key:"render",value:function(){return l.default.createElement("input",a({type:"text"},this.props,{value:this.state.value,onBlur:this.onBlur,onChange:this.onChange}))}}]),t}();t.default=i,i.propTypes={value:r.default.number.isRequired,onChange:r.default.func.isRequired}},287:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=f(n(0)),l=f(n(2)),r=n(150),u=n(186),i=f(n(285)),s=f(n(284)),c=f(n(121));function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={issue:{_id:"",title:"",status:"",owner:"",effort:null,completionDate:null,created:null},invalidFields:{},showingValidation:!1,toastVisible:!1,toastMessage:"",toastType:"success"},n.onChange=n.onChange.bind(n),n.loadData=n.loadData.bind(n),n.onValidityChange=n.onValidityChange.bind(n),n.onSubmit=n.onSubmit.bind(n),n.dismissValidation=n.dismissValidation.bind(n),n.showValidation=n.showValidation.bind(n),n.showSuccess=n.showSuccess.bind(n),n.showError=n.showError.bind(n),n.dismissToast=n.dismissToast.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"componentDidMount",value:function(){this.loadData()}},{key:"componentDidUpdate",value:function(e){e.match.params.id!==this.props.match.params.id&&this.loadData()}},{key:"onChange",value:function(e,t){var n=Object.assign({},this.state.issue),a=void 0!==t?t:e.target.value;n[e.target.name]=a,this.setState({issue:n})}},{key:"onValidityChange",value:function(e,t){var n=Object.assign({},this.state.invalidFields);t?delete n[e.target.name]:n[e.target.name]=!0,this.setState({invalidFields:n})}},{key:"onSubmit",value:function(e){var t=this;e.preventDefault(),this.showValidation(),0===Object.keys(this.state.invalidFields).length&&fetch("/api/issues/"+this.props.match.params.id,{method:"put",headers:{"Content-type":"application/json"},body:JSON.stringify(this.state.issue)}).then(function(e){e.ok&&e.json().then(function(e){e.created=new Date(e.created),e.completionDate&&(e.completionDate=new Date(e.completionDate)),t.setState({issue:e}),t.showSuccess("Updated Issue Successfully")})}).catch(function(e){t.showError("Error in sending data to server: "+e.message)})}},{key:"loadData",value:function(){var e=this;fetch("/api/issues/"+this.props.match.params.id).then(function(t){t.ok?t.json().then(function(t){t.created=new Date(t.created),t.completionDate=null!=t.completionDate?new Date(t.completionDate).toDateString():"",e.setState({issue:t})}):t.json().then(function(t){e.showError("Failed to fetch issue : "+t.message)})}).catch(function(t){e.showError("Error in fetching data from server : "+t.message)})}},{key:"showValidation",value:function(){this.setState({showingValidation:!0})}},{key:"dismissValidation",value:function(){this.setState({showingValidation:!1})}},{key:"showSuccess",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"success"})}},{key:"showError",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"danger"})}},{key:"dismissToast",value:function(){this.setState({toastVisible:!1})}},{key:"render",value:function(){var e=this.state.issue,t=null;return 0!==Object.keys(this.state.invalidFields).length&&this.state.showingValidation&&(t=o.default.createElement(r.Alert,{bsStyle:"danger",onDismiss:this.dismissValidation},"Please correct invalid fields before submitting.")),o.default.createElement(r.Panel,null,o.default.createElement(r.Panel.Heading,null,"Edit Issue"),o.default.createElement(r.Panel.Body,null,o.default.createElement(r.Form,{horizontal:!0,onSubmit:this.onSubmit},o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"ID"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl.Static,null,e._id))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Created"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl.Static,null,e.created?e.created.toDateString():""))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Status"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl,{componentClass:"select",name:"status",value:e.status,onChange:this.onChange},o.default.createElement("option",{value:"New"},"New"),o.default.createElement("option",{value:"Open"},"Open"),o.default.createElement("option",{value:"Assigned"},"Assigned"),o.default.createElement("option",{value:"Fixed"},"Fixed"),o.default.createElement("option",{value:"Verified"},"Verified"),o.default.createElement("option",{value:"Closed"},"Closed")))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Owner"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl,{name:"owner",value:e.owner,onChange:this.onChange}))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Effort"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl,{componentClass:i.default,name:"effort",value:e.effort,onChange:this.onChange}))),o.default.createElement(r.FormGroup,{validationState:this.state.invalidFields.completionDate?"error":""},o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Completion Date"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl,{componentClass:s.default,name:"completionDate",value:e.completionDate,onChange:this.onChange,onValidityChange:this.onValidityChange}),o.default.createElement(r.FormControl.Feedback,null))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{componentClass:r.ControlLabel,sm:3},"Title"),o.default.createElement(r.Col,{sm:9},o.default.createElement(r.FormControl,{name:"title",value:e.title,onChange:this.onChange}))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{smOffset:3,sm:6},o.default.createElement(r.ButtonToolbar,null,o.default.createElement(r.Button,{bsStyle:"primary",type:"submit"},"Submit"),o.default.createElement(u.LinkContainer,{to:"/issues"},o.default.createElement(r.Button,{bsStyle:"link"},"Back"))))),o.default.createElement(r.FormGroup,null,o.default.createElement(r.Col,{smOffset:3,sm:9},t))),o.default.createElement(c.default,{message:this.state.toastMessage,bsStyle:this.state.toastType,showing:this.state.toastVisible,onDismiss:this.dismissToast})))}}]),t}();t.default=d,d.propTypes={match:l.default.shape({params:l.default.shape({id:l.default.string})}).isRequired}},302:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=u(n(0)),l=u(n(2)),r=n(150);function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={status:e.initFilter.status||"",effort_gte:e.initFilter.effort_gte||"",effort_lte:e.initFilter.effort_lte||"",changed:!1},n.onChangeStatus=n.onChangeStatus.bind(n),n.onChangeEffortGte=n.onChangeEffortGte.bind(n),n.onChangeEffortLte=n.onChangeEffortLte.bind(n),n.applyFilter=n.applyFilter.bind(n),n.resetFilter=n.resetFilter.bind(n),n.clearFilter=n.clearFilter.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({status:e.initFilter.status||"",effort_gte:e.initFilter.effort_gte||"",effort_lte:e.initFilter.effort_lte||"",changed:!1})}},{key:"onChangeStatus",value:function(e){this.setState({status:e.target.value,changed:!0})}},{key:"onChangeEffortGte",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({effort_gte:e.target.value,changed:!0})}},{key:"onChangeEffortLte",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({effort_lte:e.target.value,changed:!0})}},{key:"applyFilter",value:function(){var e={};this.state.status&&(e.status=this.state.status),this.state.effort_gte&&(e.effort_gte=this.state.effort_gte),this.state.effort_lte&&(e.effort_lte=this.state.effort_lte),this.props.setFilter(e)}},{key:"clearFilter",value:function(){this.props.setFilter({})}},{key:"resetFilter",value:function(){this.setState({status:this.props.initFilter.status||"",effort_gte:this.props.initFilter.effort_gte||"",effort_lte:this.props.initFilter.effort_lte||"",changed:!1})}},{key:"render",value:function(){return o.default.createElement(r.Row,null,o.default.createElement(r.Col,{xs:6,sm:4,md:3,lg:2},o.default.createElement(r.FormGroup,null,o.default.createElement(r.ControlLabel,null,"Status"),o.default.createElement(r.FormControl,{componentClass:"select",value:this.state.status,onChange:this.onChangeStatus},o.default.createElement("option",{value:""},"(Any)"),o.default.createElement("option",{value:"New"},"New"),o.default.createElement("option",{value:"Open"},"Open"),o.default.createElement("option",{value:"Assigned"},"Assigned"),o.default.createElement("option",{value:"Fixed"},"Fixed"),o.default.createElement("option",{value:"Verified"},"Verified"),o.default.createElement("option",{value:"Closed"},"Closed")))),o.default.createElement(r.Col,{xs:6,sm:4,md:3,lg:2},o.default.createElement(r.FormGroup,null,o.default.createElement(r.ControlLabel,null,"Effort"),o.default.createElement(r.InputGroup,null,o.default.createElement(r.FormControl,{value:this.state.effort_gte,onChange:this.onChangeEffortGte}),o.default.createElement(r.InputGroup.Addon,null,"-"),o.default.createElement(r.FormControl,{value:this.state.effort_lte,onChange:this.onChangeEffortLte})))),o.default.createElement(r.Col,{xs:6,sm:4,md:3,lg:3},o.default.createElement(r.FormGroup,null,o.default.createElement(r.ControlLabel,null,"Â "),o.default.createElement(r.ButtonToolbar,null,o.default.createElement(r.Button,{bsStyle:"primary",onClick:this.applyFilter},"Apply"),o.default.createElement(r.Button,{onClick:this.resetFilter,disabled:!this.state.changed},"Reset"),o.default.createElement(r.Button,{onClick:this.clearFilter},"Clear")))))}}]),t}();i.propTypes={setFilter:l.default.func.isRequired,initFilter:l.default.shape({status:l.default.string.isRequired,effort_gte:l.default.string.isRequired,effort_lte:l.default.string.isRequired}).isRequired},t.default=i},452:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=d(n(0));n(451);var l=d(n(2)),r=n(76),u=n(150),i=d(n(122)),s=d(n(303)),c=d(n(302)),f=d(n(121));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={issues:[],query:{status:"",effort_gte:"",effort_lte:""},toastVisible:!1,toastMessage:"",toastType:"success"},n.loadData=n.loadData.bind(n),n.setFilter=n.setFilter.bind(n),n.deleteIssue=n.deleteIssue.bind(n),n.showError=n.showError.bind(n),n.dismissToast=n.dismissToast.bind(n),n.setFilter(n.state.query),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),a(t,null,[{key:"constructQuery",value:function(e){return""+(e.status?"status="+e.status:"")+(e.effort_gte?"&effort_gte="+e.effort_gte:"")+(e.effort_lte?"&effort_lte="+e.effort_lte:"")}}]),a(t,[{key:"componentDidMount",value:function(){this.loadData()}},{key:"componentDidUpdate",value:function(e){var t=e.location,n=this.props.location;t.search!==n.search&&this.loadData()}},{key:"setFilter",value:function(e){this.setState({query:e}),this.props.history.push({pathname:this.props.location.pathname,search:t.constructQuery(e),query:e})}},{key:"showError",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"danger"})}},{key:"dismissToast",value:function(){this.setState({toastVisible:!1})}},{key:"loadData",value:function(){var e=this;fetch("/api/issues"+this.props.location.search).then(function(t){t.ok?t.json().then(function(t){t.records.forEach(function(e){e.created=new Date(e.created),e.completionDate&&(e.completionDate=new Date(e.completionDate))}),e.setState({issues:t.records})}):t.json().then(function(t){e.showError("Failed to fetch issue: "+t.message)})}).catch(function(t){e.showError("Error in fetching data from server + "+t.message)})}},{key:"deleteIssue",value:function(e){var t=this;fetch("/api/issues/"+e,{method:"DELETE"}).then(function(e){e.ok?t.loadData():t.showError("Failed to delete issue")})}},{key:"render",value:function(){return o.default.createElement("div",null,o.default.createElement(u.Panel,null,o.default.createElement(u.Panel.Heading,null,o.default.createElement(u.Panel.Title,{toggle:!0},"Filter")),o.default.createElement(u.Panel.Collapse,null,o.default.createElement(u.Panel.Body,null,o.default.createElement(c.default,{setFilter:this.setFilter,initFilter:this.state.query})))),o.default.createElement(m,{issues:this.state.issues,deleteIssue:this.deleteIssue}),o.default.createElement(f.default,{showing:this.state.toastVisible,onDismiss:this.dismissToast,message:this.state.toastMessage,bsStyle:this.state.toastType}))}}]),t}(),h=function(e){return o.default.createElement("tr",null,o.default.createElement("td",null,o.default.createElement(r.Link,{to:"/issues/"+e.issue._id},e.issue._id.substr(-4))),o.default.createElement("td",null,e.issue.status),o.default.createElement("td",null,e.issue.owner),o.default.createElement("td",null,e.issue.created.toDateString()),o.default.createElement("td",null,e.issue.effort),o.default.createElement("td",null,e.issue.completionDate?e.issue.completionDate.toDateString():""),o.default.createElement("td",null,e.issue.title),o.default.createElement("td",null,o.default.createElement(u.Button,{bsSize:"xsmall",onClick:function(){e.deleteIssue(e.issue._id)}},o.default.createElement(i.default,{icon:s.default}))))};function m(e){var t=e.issues.map(function(t){return o.default.createElement(h,{key:t._id,issue:t,deleteIssue:e.deleteIssue})});return o.default.createElement(u.Table,{bordered:!0,condensed:!0,hover:!0,responsive:!0},o.default.createElement("thead",null,o.default.createElement("tr",null,o.default.createElement("th",null,"Id"),o.default.createElement("th",null,"Status"),o.default.createElement("th",null,"Owner"),o.default.createElement("th",null,"Created"),o.default.createElement("th",null,"Effort"),o.default.createElement("th",null,"Completion date"),o.default.createElement("th",null,"Title"),o.default.createElement("th",null))),o.default.createElement("tbody",null,t))}h.propTypes={issue:l.default.shape({owner:l.default.string.isRequired,title:l.default.string.isRequired,_id:l.default.string,status:l.default.string,created:l.default.string,effort:l.default.number,completionDate:l.default.string}).isRequired,deleteIssue:l.default.func.isRequired},m.propTypes={issues:l.default.arrayOf({}).isRequired,deleteIssue:l.default.func.isRequired},p.propTypes={location:l.default.shape({pathname:l.default.string.isRequired,search:l.default.string.isRequired,query:l.default.shape({}).isRequired}).isRequired,history:l.default.shape({push:l.default.func.isRequired}).isRequired},t.default=p},693:function(e,t,n){"use strict";n(692);var a=d(n(0)),o=d(n(20)),l=n(76),r=d(n(452)),u=d(n(287)),i=n(283),s=d(i),c=d(n(278)),f=d(n(277));function d(e){return e&&e.__esModule?e:{default:e}}var p=document.getElementById("contents");o.default.render(a.default.createElement(function(){return a.default.createElement(l.BrowserRouter,null,a.default.createElement("div",{className:"container"},a.default.createElement(s.default,null),a.default.createElement("hr",null),a.default.createElement(l.Switch,null,a.default.createElement(l.Route,{exact:!0,path:"/home",component:i.Home}),a.default.createElement(l.Route,{exact:!0,path:"/issues",component:(0,l.withRouter)(r.default)}),a.default.createElement(l.Route,{exact:!0,path:"/issues/:id",component:u.default}),a.default.createElement(l.Route,{path:"/articles",component:f.default}),a.default.createElement(l.Route,{path:"/*",component:c.default})),a.default.createElement(i.Footer,null)))},null),p)},694:function(e,t,n){e.exports=n(693)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,