!function(e){function t(t){for(var a,o,u=t[0],i=t[1],s=t[2],f=0,d=[];f<u.length;f++)o=u[f],r[o]&&d.push(r[o][0]),r[o]=0;for(a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a]);for(c&&c(t);d.length;)d.shift()();return l.push.apply(l,s||[]),n()}function n(){for(var e,t=0;t<l.length;t++){for(var n=l[t],a=!0,u=1;u<n.length;u++){var i=n[u];0!==r[i]&&(a=!1)}a&&(l.splice(t--,1),e=o(o.s=n[0]))}return e}var a={},r={1:0},l=[];function o(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=a,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},o.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="./";var u=window.webpackJsonp=window.webpackJsonp||[],i=u.push.bind(u);u.push=t,u=u.slice();for(var s=0;s<u.length;s++)t(u[s]);var c=i;l.push([679,0]),n()}({274:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=u(n(0)),l=n(105),o=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=[{title:"First Article",key:"first",text:"Hello from First article"},{title:"Second Article",key:"second",text:"Hello from Second article"},{title:"Third Article",key:"third",text:"Hello from Third article"},{title:"Fourth Article",key:"fourth",text:"Hello from Fourth article"}],s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"render",value:function(){var e=this,t=i.filter(function(t){return t.key===e.props.match.params.articleId})[0];return t?r.default.createElement("div",null,r.default.createElement("h3",{className:"title"},t.title),r.default.createElement("hr",null),r.default.createElement("p",{className:"text"},t.text)):r.default.createElement("div",null,"No Article with that key")}}]),t}(),c=function(e){var t=e.match;return r.default.createElement("div",{className:"articles"},r.default.createElement("h2",null,"Articles section"),r.default.createElement("ul",{className:"articles"},i.map(function(e){return r.default.createElement("li",{className:"article",key:e.key},r.default.createElement(l.Link,{to:t.url+"/"+e.key},e.title))})),r.default.createElement(l.Route,{path:t.url+"/:articleId",component:s}))};s.propTypes={match:o.default.shape({params:o.default.shape({articleId:o.default.string.isRequired})}).isRequired},c.propTypes={match:o.default.shape({}).isRequired},t.default=c},275:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=n(0),l=(a=r)&&a.__esModule?a:{default:a};t.default=function(){return l.default.createElement("p",null,"Page Not Fount")}},278:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Footer=t.Header=t.Home=void 0;var a=s(n(0)),r=n(76),l=n(183),o=s(n(184)),u=s(n(277)),i=s(n(276));function s(e){return e&&e.__esModule?e:{default:e}}t.Home=function(){return a.default.createElement("div",{className:"home"},a.default.createElement("h1",null,"Home Section contents"))},t.Header=function(){return a.default.createElement(r.Navbar,{fluid:!0},a.default.createElement(r.Navbar.Header,null,a.default.createElement(r.Navbar.Brand,null,"Issue Tracker")),a.default.createElement(r.Nav,null,a.default.createElement(l.LinkContainer,{to:"/"},a.default.createElement(r.NavItem,null,"Home")),a.default.createElement(l.LinkContainer,{to:"/issues"},a.default.createElement(r.NavItem,null,"Issues")),a.default.createElement(l.LinkContainer,{to:"/reports"},a.default.createElement(r.NavItem,null,"Reports")),a.default.createElement(l.LinkContainer,{to:"/articles"},a.default.createElement(r.NavItem,null,"Articles"))),a.default.createElement(r.Nav,{pullRight:!0},a.default.createElement(r.NavItem,null,a.default.createElement(o.default,{icon:u.default})," Create Issue"),a.default.createElement(r.NavDropdown,{id:"user-dropdown",title:a.default.createElement(o.default,{icon:i.default}),noCaret:!0},a.default.createElement(r.MenuItem,null,"Logout"))))},t.Footer=function(){return a.default.createElement("div",{className:"footer"},a.default.createElement("h5",null,a.default.createElement("small",null," Full source code available at this Â ",a.default.createElement("a",{href:"https://github.com/ashotpahlevanyan/promernstack-book"},"Github repository"))))}},279:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=u(n(0)),l=n(76),o=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"componentDidUpdate",value:function(){this.props.showing&&clearTimeout(this.dismissTimer)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.dismissTimer)}},{key:"render",value:function(){return r.default.createElement(l.Collapse,{in:this.props.showing},r.default.createElement("div",{style:{position:"fixed",top:30,left:0,right:0,textAlign:"center"}},r.default.createElement(l.Alert,{style:{display:"inline-block",width:500},bsStyle:this.props.bsStyle,onDismiss:this.props.onDismiss},this.props.message)))}}]),t}();t.default=i,i.propTypes={showing:o.default.bool.isRequired,onDismiss:o.default.func.isRequired,bsStyle:o.default.string,message:o.default.any.isRequired},i.defaultProps={bsStyle:"success"}},280:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=u(n(0)),o=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={value:t.editFormat(e.value),focused:!1,valid:!0},n.onBlur=n.onBlur.bind(n),n.onChange=n.onChange.bind(n),n.onFocus=n.onFocus.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),r(t,null,[{key:"displayFormat",value:function(e){return null!=e&&""!=e?new Date(e).toDateString():""}},{key:"editFormat",value:function(e){return null!=e&&""!=e?new Date(e).toISOString().substr(0,10):""}},{key:"unformat",value:function(e){var t=new Date(e);return Number.isNaN(t.getTime())?null:t}}]),r(t,[{key:"componentWillReceiveProps",value:function(e){e.value!==this.props.value&&this.setState({value:t.editFormat(e.value)})}},{key:"onFocus",value:function(){this.setState({focused:!0})}},{key:"onBlur",value:function(e){var n=t.unformat(this.state.value),a=""===this.state.value||null!=n;a!==this.state.valid&&this.props.onValidityChange&&this.props.onValidityChange(e,a),this.setState({focused:!1,valid:a}),a&&this.props.onChange(e,n)}},{key:"onChange",value:function(e){e.target.value.match(/^[\d-]*$/)&&this.setState({value:e.target.value})}},{key:"render",value:function(){var e=this.state.focused||!this.state.valid?this.state.value:t.displayFormat(this.props.value),n=Object.assign({},this.props);return delete n.onValidityChange,l.default.createElement("input",a({type:"text"},n,{value:e,placeholder:this.state.focused?"yyyy-mm-dd":null,onFocus:this.onFocus,onBlur:this.onBlur,onChange:this.onChange}))}}]),t}();t.default=i,i.propTypes={value:o.default.shape({}).isRequired,onChange:o.default.func.isRequired,onValidityChange:o.default.func.isRequired,name:o.default.string.isRequired}},281:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),l=u(n(0)),o=u(n(2));function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={value:t.format(n.props.value)},n.onChange=n.onChange.bind(n),n.onBlur=n.onBlur.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,l.default.Component),r(t,null,[{key:"format",value:function(e){return null!=e?e.toString():""}},{key:"unformat",value:function(e){var t=parseInt(e,10);return Number.isNaN(t)?null:t}}]),r(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({value:t.format(e.value)})}},{key:"onBlur",value:function(e){this.props.onChange(e,t.unformat(this.state.value))}},{key:"onChange",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({value:e.target.value})}},{key:"render",value:function(){return l.default.createElement("input",a({type:"text"},this.props,{value:this.state.value,onBlur:this.onBlur,onChange:this.onChange}))}}]),t}();t.default=i,i.propTypes={value:o.default.number.isRequired,onChange:o.default.func.isRequired}},283:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=f(n(0)),l=f(n(2)),o=n(76),u=n(183),i=f(n(281)),s=f(n(280)),c=f(n(279));function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={issue:{_id:"",title:"",status:"",owner:"",effort:null,completionDate:null,created:null},invalidFields:{},showingValidation:!1,toastVisible:!1,toastMessage:"",toastType:"success"},n.onChange=n.onChange.bind(n),n.loadData=n.loadData.bind(n),n.onValidityChange=n.onValidityChange.bind(n),n.onSubmit=n.onSubmit.bind(n),n.dismissValidation=n.dismissValidation.bind(n),n.showValidation=n.showValidation.bind(n),n.showSuccess=n.showSuccess.bind(n),n.showError=n.showError.bind(n),n.dismissToast=n.dismissToast.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"componentDidMount",value:function(){this.loadData()}},{key:"componentDidUpdate",value:function(e){e.match.params.id!==this.props.match.params.id&&this.loadData()}},{key:"onChange",value:function(e,t){var n=Object.assign({},this.state.issue),a=void 0!==t?t:e.target.value;n[e.target.name]=a,this.setState({issue:n})}},{key:"onValidityChange",value:function(e,t){var n=Object.assign({},this.state.invalidFields);t?delete n[e.target.name]:n[e.target.name]=!0,this.setState({invalidFields:n})}},{key:"showValidation",value:function(){this.setState({showingValidation:!0})}},{key:"dismissValidation",value:function(){this.setState({showingValidation:!1})}},{key:"showSuccess",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"success"})}},{key:"showError",value:function(e){this.setState({toastVisible:!0,toastMessage:e,toastType:"danger"})}},{key:"dismissToast",value:function(){this.setState({toastVisible:!1})}},{key:"onSubmit",value:function(e){var t=this;e.preventDefault(),this.showValidation(),0===Object.keys(this.state.invalidFields).length&&fetch("/api/issues/"+this.props.match.params.id,{method:"put",headers:{"Content-type":"application/json"},body:JSON.stringify(this.state.issue)}).then(function(e){e.ok&&e.json().then(function(e){e.created=new Date(e.created),e.completionDate&&(e.completionDate=new Date(e.completionDate)),t.setState({issue:e}),t.showSuccess("Updated Issue Successfully")})}).catch(function(e){t.showError("Error in sending data to server: "+e.message)})}},{key:"loadData",value:function(){var e=this;fetch("/api/issues/"+this.props.match.params.id).then(function(t){t.ok?t.json().then(function(t){t.created=new Date(t.created),t.completionDate=null!=t.completionDate?new Date(t.completionDate).toDateString():"",e.setState({issue:t})}):t.json().then(function(t){e.showError("Failed to fetch issue : "+t.message)})}).catch(function(t){e.showError("Error in fetching data from server : "+t.message)})}},{key:"render",value:function(){var e=this.state.issue,t=null;return 0!==Object.keys(this.state.invalidFields).length&&this.state.showingValidation&&(t=r.default.createElement(o.Alert,{bsStyle:"danger",onDismiss:this.dismissValidation},"Please correct invalid fields before submitting.")),r.default.createElement(o.Panel,null,r.default.createElement(o.Panel.Heading,null,"Edit Issue"),r.default.createElement(o.Panel.Body,null,r.default.createElement(o.Form,{horizontal:!0,onSubmit:this.onSubmit},r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"ID"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl.Static,null,e._id))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Created"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl.Static,null,e.created?e.created.toDateString():""))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Status"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl,{componentClass:"select",name:"status",value:e.status,onChange:this.onChange},r.default.createElement("option",{value:"New"},"New"),r.default.createElement("option",{value:"Open"},"Open"),r.default.createElement("option",{value:"Assigned"},"Assigned"),r.default.createElement("option",{value:"Fixed"},"Fixed"),r.default.createElement("option",{value:"Verified"},"Verified"),r.default.createElement("option",{value:"Closed"},"Closed")))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Owner"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl,{name:"owner",value:e.owner,onChange:this.onChange}))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Effort"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl,{componentClass:i.default,name:"effort",value:e.effort,onChange:this.onChange}))),r.default.createElement(o.FormGroup,{validationState:this.state.invalidFields.completionDate?"error":""},r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Completion Date"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl,{componentClass:s.default,name:"completionDate",value:e.completionDate,onChange:this.onChange,onValidityChange:this.onValidityChange}),r.default.createElement(o.FormControl.Feedback,null))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{componentClass:o.ControlLabel,sm:3},"Title"),r.default.createElement(o.Col,{sm:9},r.default.createElement(o.FormControl,{name:"title",value:e.title,onChange:this.onChange}))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{smOffset:3,sm:6},r.default.createElement(o.ButtonToolbar,null,r.default.createElement(o.Button,{bsStyle:"primary",type:"submit"},"Submit"),r.default.createElement(u.LinkContainer,{to:"/issues"},r.default.createElement(o.Button,{bsStyle:"link"},"Back"))))),r.default.createElement(o.FormGroup,null,r.default.createElement(o.Col,{smOffset:3,sm:9},t))),r.default.createElement(c.default,{message:this.state.toastMessage,bsStyle:this.state.toastType,showing:this.state.toastVisible,onDismiss:this.dismissToast})))}}]),t}();t.default=d,d.propTypes={match:l.default.shape({params:l.default.shape({id:l.default.string})}).isRequired}},284:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=u(n(0)),l=u(n(2)),o=n(76);function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={status:e.initFilter.status||"",effort_gte:e.initFilter.effort_gte||"",effort_lte:e.initFilter.effort_lte||"",changed:!1},n.onChangeStatus=n.onChangeStatus.bind(n),n.onChangeEffortGte=n.onChangeEffortGte.bind(n),n.onChangeEffortLte=n.onChangeEffortLte.bind(n),n.applyFilter=n.applyFilter.bind(n),n.resetFilter=n.resetFilter.bind(n),n.clearFilter=n.clearFilter.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"componentWillReceiveProps",value:function(e){this.setState({status:e.initFilter.status||"",effort_gte:e.initFilter.effort_gte||"",effort_lte:e.initFilter.effort_lte||"",changed:!1})}},{key:"onChangeStatus",value:function(e){this.setState({status:e.target.value,changed:!0})}},{key:"onChangeEffortGte",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({effort_gte:e.target.value,changed:!0})}},{key:"onChangeEffortLte",value:function(e){e.target.value.match(/^\d*$/)&&this.setState({effort_lte:e.target.value,changed:!0})}},{key:"applyFilter",value:function(){var e={};this.state.status&&(e.status=this.state.status),this.state.effort_gte&&(e.effort_gte=this.state.effort_gte),this.state.effort_lte&&(e.effort_lte=this.state.effort_lte),this.props.setFilter(e)}},{key:"clearFilter",value:function(){this.props.setFilter({})}},{key:"resetFilter",value:function(){this.setState({status:this.props.initFilter.status||"",effort_gte:this.props.initFilter.effort_gte||"",effort_lte:this.props.initFilter.effort_lte||"",changed:!1})}},{key:"render",value:function(){return r.default.createElement(o.Row,null,r.default.createElement(o.Col,{xs:6,sm:4,md:3,lg:2},r.default.createElement(o.FormGroup,null,r.default.createElement(o.ControlLabel,null,"Status"),r.default.createElement(o.FormControl,{componentClass:"select",value:this.state.status,onChange:this.onChangeStatus},r.default.createElement("option",{value:""},"(Any)"),r.default.createElement("option",{value:"New"},"New"),r.default.createElement("option",{value:"Open"},"Open"),r.default.createElement("option",{value:"Assigned"},"Assigned"),r.default.createElement("option",{value:"Fixed"},"Fixed"),r.default.createElement("option",{value:"Verified"},"Verified"),r.default.createElement("option",{value:"Closed"},"Closed")))),r.default.createElement(o.Col,{xs:6,sm:4,md:3,lg:2},r.default.createElement(o.FormGroup,null,r.default.createElement(o.ControlLabel,null,"Effort"),r.default.createElement(o.InputGroup,null,r.default.createElement(o.FormControl,{value:this.state.effort_gte,onChange:this.onChangeEffortGte}),r.default.createElement(o.InputGroup.Addon,null,"-"),r.default.createElement(o.FormControl,{value:this.state.effort_lte,onChange:this.onChangeEffortLte})))),r.default.createElement(o.Col,{xs:6,sm:4,md:3,lg:3},r.default.createElement(o.FormGroup,null,r.default.createElement(o.ControlLabel,null,"Â "),r.default.createElement(o.ButtonToolbar,null,r.default.createElement(o.Button,{bsStyle:"primary",onClick:this.applyFilter},"Apply"),r.default.createElement(o.Button,{onClick:this.resetFilter,disabled:!this.state.changed},"Reset"),r.default.createElement(o.Button,{onClick:this.clearFilter},"Clear")))))}}]),t}();i.propTypes={setFilter:l.default.func.isRequired,initFilter:l.default.shape({status:l.default.string.isRequired,effort_gte:l.default.string.isRequired,effort_lte:l.default.string.isRequired}).isRequired},t.default=i},285:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=u(n(0)),l=u(n(2)),o=n(76);function u(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.handleSubmit=e.handleSubmit.bind(e),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"handleSubmit",value:function(e){e.preventDefault();var t=document.forms.issueAdd;this.props.createIssue({owner:t.owner.value,title:t.title.value,status:"New",created:new Date}),t.owner.value="",t.title.value=""}},{key:"render",value:function(){return r.default.createElement("div",null,r.default.createElement(o.Form,{inline:!0,name:"issueAdd",onSubmit:this.handleSubmit},r.default.createElement(o.FormGroup,null,r.default.createElement(o.FormControl,{name:"owner",placeholder:"Owner"}))," ",r.default.createElement(o.FormGroup,null,r.default.createElement(o.FormControl,{name:"title",placeholder:"Title"}))," ",r.default.createElement(o.FormGroup,null,r.default.createElement(o.Button,{type:"submit",bsStyle:"primary"},"Add"))))}}]),t}();t.default=i,i.propTypes={createIssue:l.default.func.isRequired}},435:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=d(n(0));n(434);var l=d(n(2)),o=n(105),u=n(76),i=d(n(184)),s=d(n(286)),c=d(n(285)),f=d(n(284));function d(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={issues:[],query:{status:"",effort_gte:"",effort_lte:""}},n.createIssue=n.createIssue.bind(n),n.loadData=n.loadData.bind(n),n.setFilter=n.setFilter.bind(n),n.deleteIssue=n.deleteIssue.bind(n),n.setFilter(n.state.query),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,null,[{key:"constructQuery",value:function(e){return""+(e.status?"status="+e.status:"")+(e.effort_gte?"&effort_gte="+e.effort_gte:"")+(e.effort_lte?"&effort_lte="+e.effort_lte:"")}}]),a(t,[{key:"componentDidMount",value:function(){this.loadData()}},{key:"componentDidUpdate",value:function(e){var t=e.location,n=this.props.location;t.search!==n.search&&this.loadData()}},{key:"setFilter",value:function(e){this.setState({query:e}),this.props.history.push({pathname:this.props.location.pathname,search:t.constructQuery(e),query:e})}},{key:"loadData",value:function(){var e=this;fetch("/api/issues"+this.props.location.search).then(function(t){t.ok?t.json().then(function(t){t.records.forEach(function(e){e.created=new Date(e.created),e.completionDate&&(e.completionDate=new Date(e.completionDate))}),e.setState({issues:t.records})}):t.json().then(function(e){alert("Failed to fetch issue: "+e.message)})}).catch(function(e){alert("Error in fetching data from server + "+e.message)})}},{key:"createIssue",value:function(e){var t=this;fetch("/api/issues/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(function(e){e.ok?e.json().then(function(e){e.created=new Date(e.created),e.completionDate&&(e.completionDate=new Date(e.completionDate));var n=t.state.issues.concat(e);t.setState({issues:n})}):e.json().then(function(e){alert("Failed to add issue: "+e.message)})}).catch(function(e){alert("Error in sending Data to server : "+e.message)})}},{key:"deleteIssue",value:function(e){var t=this;fetch("/api/issues/"+e,{method:"DELETE"}).then(function(e){e.ok?t.loadData():alert("Failed to delete issue")})}},{key:"render",value:function(){return r.default.createElement("div",null,r.default.createElement(u.Panel,null,r.default.createElement(u.Panel.Heading,null,r.default.createElement(u.Panel.Title,{toggle:!0},"Filter")),r.default.createElement(u.Panel.Collapse,null,r.default.createElement(u.Panel.Body,null,r.default.createElement(f.default,{setFilter:this.setFilter,initFilter:this.state.query})))),r.default.createElement(h,{issues:this.state.issues,deleteIssue:this.deleteIssue}),r.default.createElement(c.default,{createIssue:this.createIssue}))}}]),t}(),m=function(e){return r.default.createElement("tr",null,r.default.createElement("td",null,r.default.createElement(o.Link,{to:"/issues/"+e.issue._id},e.issue._id.substr(-4))),r.default.createElement("td",null,e.issue.status),r.default.createElement("td",null,e.issue.owner),r.default.createElement("td",null,e.issue.created.toDateString()),r.default.createElement("td",null,e.issue.effort),r.default.createElement("td",null,e.issue.completionDate?e.issue.completionDate.toDateString():""),r.default.createElement("td",null,e.issue.title),r.default.createElement("td",null,r.default.createElement(u.Button,{bsSize:"xsmall",onClick:function(){e.deleteIssue(e.issue._id)}},r.default.createElement(i.default,{icon:s.default}))))};function h(e){var t=e.issues.map(function(t){return r.default.createElement(m,{key:t._id,issue:t,deleteIssue:e.deleteIssue})});return r.default.createElement(u.Table,{bordered:!0,condensed:!0,hover:!0,responsive:!0},r.default.createElement("thead",null,r.default.createElement("tr",null,r.default.createElement("th",null,"Id"),r.default.createElement("th",null,"Status"),r.default.createElement("th",null,"Owner"),r.default.createElement("th",null,"Created"),r.default.createElement("th",null,"Effort"),r.default.createElement("th",null,"Completion date"),r.default.createElement("th",null,"Title"),r.default.createElement("th",null))),r.default.createElement("tbody",null,t))}m.propTypes={issue:l.default.shape({owner:l.default.string.isRequired,title:l.default.string.isRequired,_id:l.default.string,status:l.default.string,created:l.default.string,effort:l.default.number,completionDate:l.default.string}).isRequired,deleteIssue:l.default.func.isRequired},h.propTypes={issues:l.default.arrayOf({}).isRequired,deleteIssue:l.default.func.isRequired},p.propTypes={location:l.default.shape({pathname:l.default.string.isRequired,search:l.default.string.isRequired,query:l.default.shape({}).isRequired}).isRequired,history:l.default.shape({push:l.default.func.isRequired}).isRequired},t.default=p},678:function(e,t,n){"use strict";n(677);var a=f(n(0)),r=f(n(24)),l=n(105),o=f(n(435)),u=f(n(283)),i=n(278),s=f(n(275)),c=f(n(274));function f(e){return e&&e.__esModule?e:{default:e}}var d=document.getElementById("contents");r.default.render(a.default.createElement(function(){return a.default.createElement(l.BrowserRouter,null,a.default.createElement("div",{className:"container"},a.default.createElement(i.Header,null),a.default.createElement("hr",null),a.default.createElement(l.Switch,null,a.default.createElement(l.Route,{exact:!0,path:"/",component:i.Home}),a.default.createElement(l.Route,{exact:!0,path:"/issues",component:(0,l.withRouter)(o.default)}),a.default.createElement(l.Route,{exact:!0,path:"/issues/:id",component:u.default}),a.default.createElement(l.Route,{path:"/articles",component:c.default}),a.default.createElement(l.Route,{path:"/*",component:s.default})),a.default.createElement(i.Footer,null)))},null),d)},679:function(e,t,n){e.exports=n(678)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FydGljbGVzLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvTm90Rm91bmQuanN4Iiwid2VicGFjazovLy8uL3NyYy9Db21tb24uanN4Iiwid2VicGFjazovLy8uL3NyYy9Ub2FzdC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0RhdGVJbnB1dC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL051bUlucHV0LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvSXNzdWVFZGl0LmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvSXNzdWVGaWx0ZXIuanN4Iiwid2VicGFjazovLy8uL3NyYy9Jc3N1ZUFkZC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0lzc3VlTGlzdC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC5qc3giXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMSIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwidmFsdWUiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwiYmluZCIsInNsaWNlIiwiX3JlYWN0Um91dGVyRG9tIiwiYXJ0aWNsZXMiLCJ0aXRsZSIsImtleSIsInRleHQiLCJBcnRpY2xlIiwiX3JlYWN0MiIsImRlZmF1bHQiLCJDb21wb25lbnQiLCJfdGhpczIiLCJ0aGlzIiwiYXJ0aWNsZSIsImZpbHRlciIsImFydCIsInByb3BzIiwibWF0Y2giLCJwYXJhbXMiLCJhcnRpY2xlSWQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiQXJ0aWNsZXMiLCJfcmVmIiwibWFwIiwiTGluayIsInRvIiwidXJsIiwiUm91dGUiLCJwYXRoIiwiY29tcG9uZW50IiwicHJvcFR5cGVzIiwiX3Byb3BUeXBlczIiLCJzaGFwZSIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJfcmVhY3QiLCJfcmVhY3RCb290c3RyYXAiLCJfcmVhY3RSb3V0ZXJCb290c3RyYXAiLCJIb21lIiwiSGVhZGVyIiwiTmF2YmFyIiwiZmx1aWQiLCJCcmFuZCIsIk5hdiIsIkxpbmtDb250YWluZXIiLCJOYXZJdGVtIiwicHVsbFJpZ2h0IiwiX3JlYWN0Rm9udGF3ZXNvbWUyIiwiaWNvbiIsIl9mYVBsdXMyIiwiTmF2RHJvcGRvd24iLCJpZCIsIl9mYUVsbGlwc2lzSDIiLCJub0NhcmV0IiwiTWVudUl0ZW0iLCJGb290ZXIiLCJocmVmIiwiVG9hc3QiLCJfY2xhc3NDYWxsQ2hlY2siLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwic2hvd2luZyIsImNsZWFyVGltZW91dCIsImRpc21pc3NUaW1lciIsIkNvbGxhcHNlIiwiaW4iLCJzdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInJpZ2h0IiwidGV4dEFsaWduIiwiQWxlcnQiLCJkaXNwbGF5Iiwid2lkdGgiLCJic1N0eWxlIiwib25EaXNtaXNzIiwibWVzc2FnZSIsImJvb2wiLCJmdW5jIiwiYW55IiwiZGVmYXVsdFByb3BzIiwiRGF0ZUlucHV0IiwiX3RoaXMiLCJzdGF0ZSIsImVkaXRGb3JtYXQiLCJmb2N1c2VkIiwidmFsaWQiLCJvbkJsdXIiLCJvbkNoYW5nZSIsIm9uRm9jdXMiLCJkYXRlIiwiRGF0ZSIsInRvRGF0ZVN0cmluZyIsInRvSVNPU3RyaW5nIiwic3Vic3RyIiwic3RyIiwidmFsIiwiTnVtYmVyIiwiaXNOYU4iLCJnZXRUaW1lIiwibmV3UHJvcHMiLCJzZXRTdGF0ZSIsImUiLCJ1bmZvcm1hdCIsIm9uVmFsaWRpdHlDaGFuZ2UiLCJ0YXJnZXQiLCJkaXNwbGF5Rm9ybWF0IiwiY2hpbGRQcm9wcyIsImFzc2lnbiIsIl9leHRlbmRzIiwidHlwZSIsInBsYWNlaG9sZGVyIiwiTnVtSW5wdXQiLCJmb3JtYXQiLCJudW0iLCJ0b1N0cmluZyIsInBhcnNlSW50IiwibnVtYmVyIiwiSXNzdWVFZGl0IiwiaXNzdWUiLCJfaWQiLCJzdGF0dXMiLCJvd25lciIsImVmZm9ydCIsImNvbXBsZXRpb25EYXRlIiwiY3JlYXRlZCIsImludmFsaWRGaWVsZHMiLCJzaG93aW5nVmFsaWRhdGlvbiIsInRvYXN0VmlzaWJsZSIsInRvYXN0TWVzc2FnZSIsInRvYXN0VHlwZSIsImxvYWREYXRhIiwib25TdWJtaXQiLCJkaXNtaXNzVmFsaWRhdGlvbiIsInNob3dWYWxpZGF0aW9uIiwic2hvd1N1Y2Nlc3MiLCJzaG93RXJyb3IiLCJkaXNtaXNzVG9hc3QiLCJwcmV2UHJvcHMiLCJldmVudCIsImNvbnZlcnRlZFZhbHVlIiwidW5kZWZpbmVkIiwicHJldmVudERlZmF1bHQiLCJrZXlzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQ29udGVudC10eXBlIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsImpzb24iLCJ1cGRhdGVkSXNzdWUiLCJjYXRjaCIsImVyciIsIl90aGlzMyIsImVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJQYW5lbCIsIkhlYWRpbmciLCJCb2R5IiwiRm9ybSIsImhvcml6b250YWwiLCJGb3JtR3JvdXAiLCJDb2wiLCJjb21wb25lbnRDbGFzcyIsIkNvbnRyb2xMYWJlbCIsInNtIiwiRm9ybUNvbnRyb2wiLCJTdGF0aWMiLCJfTnVtSW5wdXQyIiwidmFsaWRhdGlvblN0YXRlIiwiX0RhdGVJbnB1dDIiLCJGZWVkYmFjayIsInNtT2Zmc2V0IiwiQnV0dG9uVG9vbGJhciIsIkJ1dHRvbiIsIl9Ub2FzdDIiLCJJc3N1ZUZpbHRlciIsImluaXRGaWx0ZXIiLCJlZmZvcnRfZ3RlIiwiZWZmb3J0X2x0ZSIsImNoYW5nZWQiLCJvbkNoYW5nZVN0YXR1cyIsIm9uQ2hhbmdlRWZmb3J0R3RlIiwib25DaGFuZ2VFZmZvcnRMdGUiLCJhcHBseUZpbHRlciIsInJlc2V0RmlsdGVyIiwiY2xlYXJGaWx0ZXIiLCJuZXdGaWx0ZXIiLCJzZXRGaWx0ZXIiLCJSb3ciLCJ4cyIsIm1kIiwibGciLCJJbnB1dEdyb3VwIiwiQWRkb24iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJJc3N1ZUFkZCIsImhhbmRsZVN1Ym1pdCIsImZvcm0iLCJkb2N1bWVudCIsImZvcm1zIiwiaXNzdWVBZGQiLCJjcmVhdGVJc3N1ZSIsImlubGluZSIsIklzc3VlTGlzdCIsImlzc3VlcyIsInF1ZXJ5IiwiZGVsZXRlSXNzdWUiLCJzZWFyY2hRdWVyeSIsIm9sZFF1ZXJ5IiwibG9jYXRpb24iLCJuZXdRdWVyeSIsInNlYXJjaCIsImhpc3RvcnkiLCJwYXRobmFtZSIsImNvbnN0cnVjdFF1ZXJ5IiwicmVjb3JkcyIsImZvckVhY2giLCJhbGVydCIsIm5ld0lzc3VlIiwiQ29udGVudC1UeXBlIiwibmV3SXNzdWVzIiwiY29uY2F0IiwiX3RoaXM0IiwiVGl0bGUiLCJ0b2dnbGUiLCJfSXNzdWVGaWx0ZXIyIiwiSXNzdWVUYWJsZSIsIl9Jc3N1ZUFkZDIiLCJJc3N1ZVJvdyIsImJzU2l6ZSIsIl9mYVRyYXNoQWx0MiIsImlzc3VlUm93cyIsIlRhYmxlIiwiYm9yZGVyZWQiLCJjb25kZW5zZWQiLCJob3ZlciIsInJlc3BvbnNpdmUiLCJhcnJheU9mIiwiX0NvbW1vbiIsImNvbnRlbnROb2RlIiwiZ2V0RWxlbWVudEJ5SWQiLCJfcmVhY3REb20yIiwicmVuZGVyIiwiQnJvd3NlclJvdXRlciIsIlN3aXRjaCIsImV4YWN0Iiwid2l0aFJvdXRlciIsIl9Jc3N1ZUxpc3QyIiwiX0lzc3VlRWRpdDIiLCJfQXJ0aWNsZXMyIiwiX05vdEZvdW5kMiJdLCJtYXBwaW5ncyI6ImFBQ0EsU0FBQUEsRUFBQUMsR0FPQSxJQU5BLElBS0FDLEVBQUFDLEVBTEFDLEVBQUFILEVBQUEsR0FDQUksRUFBQUosRUFBQSxHQUNBSyxFQUFBTCxFQUFBLEdBR0FNLEVBQUEsRUFBQUMsS0FDUUQsRUFBQUgsRUFBQUssT0FBb0JGLElBQzVCSixFQUFBQyxFQUFBRyxHQUNBRyxFQUFBUCxJQUNBSyxFQUFBRyxLQUFBRCxFQUFBUCxHQUFBLElBRUFPLEVBQUFQLEdBQUEsRUFFQSxJQUFBRCxLQUFBRyxFQUNBTyxPQUFBQyxVQUFBQyxlQUFBQyxLQUFBVixFQUFBSCxLQUNBYyxFQUFBZCxHQUFBRyxFQUFBSCxJQUlBLElBREFlLEtBQUFoQixHQUNBTyxFQUFBQyxRQUNBRCxFQUFBVSxPQUFBVixHQU9BLE9BSEFXLEVBQUFSLEtBQUFTLE1BQUFELEVBQUFiLE9BR0FlLElBRUEsU0FBQUEsSUFFQSxJQURBLElBQUFDLEVBQ0FmLEVBQUEsRUFBaUJBLEVBQUFZLEVBQUFWLE9BQTRCRixJQUFBLENBRzdDLElBRkEsSUFBQWdCLEVBQUFKLEVBQUFaLEdBQ0FpQixHQUFBLEVBQ0FDLEVBQUEsRUFBa0JBLEVBQUFGLEVBQUFkLE9BQTJCZ0IsSUFBQSxDQUM3QyxJQUFBQyxFQUFBSCxFQUFBRSxHQUNBLElBQUFmLEVBQUFnQixLQUFBRixHQUFBLEdBRUFBLElBQ0FMLEVBQUFRLE9BQUFwQixJQUFBLEdBQ0FlLEVBQUFNLElBQUFDLEVBQUFOLEVBQUEs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QVcsY0FBQWxCLEVBQUEyUCxjQUFBLEtBQ0VyUCxFQUFBQyxRQUFBVyxjQUFBLE9BQUtDLFVBQVUsYUFDYmIsRUFBQUMsUUFBQVcsY0FBQW9PLEVBQUFoTixPQUFBLE1BQ0FoQyxFQUFBQyxRQUFBVyxjQUFBLFdBQ0FaLEVBQUFDLFFBQUFXLGNBQUFsQixFQUFBNFAsT0FBQSxLQUNFdFAsRUFBQUMsUUFBQVcsY0FBQWxCLEVBQUEwQixPQUFPbU8sT0FBQSxFQUFNbE8sS0FBSyxJQUFJQyxVQUFBME4sRUFBQWpOLE9BQ3RCL0IsRUFBQUMsUUFBQVcsY0FBQWxCLEVBQUEwQixPQUFPbU8sT0FBQSxFQUFNbE8sS0FBSyxVQUFVQyxXQUFXLEVBQUE1QixFQUFBOFAsWUFBQUMsRUFBQXhQLFdBQ3ZDRCxFQUFBQyxRQUFBVyxjQUFBbEIsRUFBQTBCLE9BQU9tTyxPQUFBLEVBQU1sTyxLQUFLLGNBQWNDLFVBQUFvTyxFQUFBelAsVUFDaENELEVBQUFDLFFBQUFXLGNBQUFsQixFQUFBMEIsT0FBT0MsS0FBSyxZQUFZQyxVQUFBcU8sRUFBQTFQLFVBQ3hCRCxFQUFBQyxRQUFBVyxjQUFBbEIsRUFBQTBCLE9BQU9DLEtBQUssS0FBS0MsVUFBQXNPLEVBQUEzUCxXQUVuQkQsRUFBQUMsUUFBQVcsY0FBQW9PLEVBQUFoTSxPQUFBLFNBS1UsTUFBZWlNIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdXG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuIFx0XHR3aGlsZShyZXNvbHZlcy5sZW5ndGgpIHtcbiBcdFx0XHRyZXNvbHZlcy5zaGlmdCgpKCk7XG4gXHRcdH1cblxuIFx0XHQvLyBhZGQgZW50cnkgbW9kdWxlcyBmcm9tIGxvYWRlZCBjaHVuayB0byBkZWZlcnJlZCBsaXN0XG4gXHRcdGRlZmVycmVkTW9kdWxlcy5wdXNoLmFwcGx5KGRlZmVycmVkTW9kdWxlcywgZXhlY3V0ZU1vZHVsZXMgfHwgW10pO1xuXG4gXHRcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gYWxsIGNodW5rcyByZWFkeVxuIFx0XHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiBcdH07XG4gXHRmdW5jdGlvbiBjaGVja0RlZmVycmVkTW9kdWxlcygpIHtcbiBcdFx0dmFyIHJlc3VsdDtcbiBcdFx0Zm9yKHZhciBpID0gMDsgaSA8IGRlZmVycmVkTW9kdWxlcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdHZhciBkZWZlcnJlZE1vZHVsZSA9IGRlZmVycmVkTW9kdWxlc1tpXTtcbiBcdFx0XHR2YXIgZnVsbGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsbGZpbGxlZCkge1xuIFx0XHRcdFx0ZGVmZXJyZWRNb2R1bGVzLnNwbGljZShpLS0sIDEpO1xuIFx0XHRcdFx0cmVzdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBkZWZlcnJlZE1vZHVsZVswXSk7XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQxOiAwXG4gXHR9O1xuXG4gXHR2YXIgZGVmZXJyZWRNb2R1bGVzID0gW107XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGdldHRlclxuIFx0XHRcdH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi4vXCI7XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBhZGQgZW50cnkgbW9kdWxlIHRvIGRlZmVycmVkIGxpc3RcbiBcdGRlZmVycmVkTW9kdWxlcy5wdXNoKFs2NzksMF0pO1xuIFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiByZWFkeVxuIFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGUsIExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IGFydGljbGVzID0gW1xuICB7IHRpdGxlOiAnRmlyc3QgQXJ0aWNsZScsIGtleTogJ2ZpcnN0JywgdGV4dDogJ0hlbGxvIGZyb20gRmlyc3QgYXJ0aWNsZScgfSxcbiAgeyB0aXRsZTogJ1NlY29uZCBBcnRpY2xlJywga2V5OiAnc2Vjb25kJywgdGV4dDogJ0hlbGxvIGZyb20gU2Vjb25kIGFydGljbGUnIH0sXG4gIHsgdGl0bGU6ICdUaGlyZCBBcnRpY2xlJywga2V5OiAndGhpcmQnLCB0ZXh0OiAnSGVsbG8gZnJvbSBUaGlyZCBhcnRpY2xlJyB9LFxuICB7IHRpdGxlOiAnRm91cnRoIEFydGljbGUnLCBrZXk6ICdmb3VydGgnLCB0ZXh0OiAnSGVsbG8gZnJvbSBGb3VydGggYXJ0aWNsZScgfSxcbl07XG5cbmNsYXNzIEFydGljbGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgYXJ0aWNsZSA9IGFydGljbGVzLmZpbHRlcihhcnQgPT4gYXJ0LmtleSA9PT0gdGhpcy5wcm9wcy5tYXRjaC5wYXJhbXMuYXJ0aWNsZUlkKVswXTtcbiAgICBsZXQgdGVtcGxhdGU7XG4gICAgaWYgKGFydGljbGUpIHtcbiAgICAgIHRlbXBsYXRlID0gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0aXRsZVwiPnthcnRpY2xlLnRpdGxlfTwvaDM+XG4gICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dFwiPnthcnRpY2xlLnRleHR9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRlbXBsYXRlID0gPGRpdj5ObyBBcnRpY2xlIHdpdGggdGhhdCBrZXk8L2Rpdj47XG4gICAgfVxuICAgIHJldHVybiB0ZW1wbGF0ZTtcbiAgfVxufVxuXG5jb25zdCBBcnRpY2xlcyA9ICh7IG1hdGNoIH0pID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJhcnRpY2xlc1wiPlxuICAgIDxoMj5BcnRpY2xlcyBzZWN0aW9uPC9oMj5cbiAgICA8dWwgY2xhc3NOYW1lPVwiYXJ0aWNsZXNcIj5cbiAgICAgIHtcbiAgICAgICAgYXJ0aWNsZXMubWFwKGFydGljbGUgPT4gKFxuICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJhcnRpY2xlXCIga2V5PXthcnRpY2xlLmtleX0+XG4gICAgICAgICAgICA8TGluayB0bz17YCR7bWF0Y2gudXJsfS8ke2FydGljbGUua2V5fWB9PnthcnRpY2xlLnRpdGxlfTwvTGluaz5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApKVxuICAgICAgfVxuICAgIDwvdWw+XG4gICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vOmFydGljbGVJZGB9IGNvbXBvbmVudD17QXJ0aWNsZX0gLz5cbiAgPC9kaXY+XG4pO1xuXG5BcnRpY2xlLnByb3BUeXBlcyA9IHtcbiAgbWF0Y2g6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcGFyYW1zOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgYXJ0aWNsZUlkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgfSksXG4gIH0pLmlzUmVxdWlyZWQsXG59O1xuXG5BcnRpY2xlcy5wcm9wVHlwZXMgPSB7XG4gIG1hdGNoOiBQcm9wVHlwZXMuc2hhcGUoe30pLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcnRpY2xlcztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE5vdEZvdW5kID0gKCkgPT4gKFxuICA8cD5QYWdlIE5vdCBGb3VudDwvcD5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IE5vdEZvdW5kO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE5hdmJhciwgTmF2LCBOYXZJdGVtLCBOYXZEcm9wZG93biwgTWVudUl0ZW0gfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xuaW1wb3J0IHsgTGlua0NvbnRhaW5lciB9IGZyb20gJ3JlYWN0LXJvdXRlci1ib290c3RyYXAnO1xuaW1wb3J0IEZvbnRBd2Vzb21lSWNvbiBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IGZhUGx1cyBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtZnJlZS1zb2xpZC9mYVBsdXMnO1xuaW1wb3J0IGZhRWxsaXBzaXNIIGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1mcmVlLXNvbGlkL2ZhRWxsaXBzaXNIJztcblxuY29uc3QgSG9tZSA9ICgpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJob21lXCI+XG4gICAgPGgxPkhvbWUgU2VjdGlvbiBjb250ZW50czwvaDE+XG4gIDwvZGl2PlxuKTtcblxuY29uc3QgSGVhZGVyID0gKCkgPT4gKFxuICA8TmF2YmFyIGZsdWlkPlxuICAgIDxOYXZiYXIuSGVhZGVyPlxuICAgICAgPE5hdmJhci5CcmFuZD5Jc3N1ZSBUcmFja2VyPC9OYXZiYXIuQnJhbmQ+XG4gICAgPC9OYXZiYXIuSGVhZGVyPlxuICAgIDxOYXY+XG4gICAgICA8TGlua0NvbnRhaW5lciB0bz1cIi9cIj5cbiAgICAgICAgPE5hdkl0ZW0+SG9tZTwvTmF2SXRlbT5cbiAgICAgIDwvTGlua0NvbnRhaW5lcj5cbiAgICAgIDxMaW5rQ29udGFpbmVyIHRvPVwiL2lzc3Vlc1wiPlxuICAgICAgICA8TmF2SXRlbT5Jc3N1ZXM8L05hdkl0ZW0+XG4gICAgICA8L0xpbmtDb250YWluZXI+XG4gICAgICA8TGlua0NvbnRhaW5lciB0bz1cIi9yZXBvcnRzXCI+XG4gICAgICAgIDxOYXZJdGVtPlJlcG9ydHM8L05hdkl0ZW0+XG4gICAgICA8L0xpbmtDb250YWluZXI+XG4gICAgICA8TGlua0NvbnRhaW5lciB0bz1cIi9hcnRpY2xlc1wiPlxuICAgICAgICA8TmF2SXRlbT5BcnRpY2xlczwvTmF2SXRlbT5cbiAgICAgIDwvTGlua0NvbnRhaW5lcj5cbiAgICA8L05hdj5cbiAgICA8TmF2IHB1bGxSaWdodD5cbiAgICAgIDxOYXZJdGVtPjxGb250QXdlc29tZUljb24gaWNvbj17ZmFQbHVzfSAvPiBDcmVhdGUgSXNzdWU8L05hdkl0ZW0+XG4gICAgICA8TmF2RHJvcGRvd24gaWQ9XCJ1c2VyLWRyb3Bkb3duXCIgdGl0bGU9ezxGb250QXdlc29tZUljb24gaWNvbj17ZmFFbGxpcHNpc0h9IC8+fSBub0NhcmV0PlxuICAgICAgICA8TWVudUl0ZW0+TG9nb3V0PC9NZW51SXRlbT5cbiAgICAgIDwvTmF2RHJvcGRvd24+XG4gICAgPC9OYXY+XG4gIDwvTmF2YmFyPlxuKTtcblxuY29uc3QgRm9vdGVyID0gKCkgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImZvb3RlclwiPlxuICAgIDxoNT5cbiAgICAgIDxzbWFsbD4gRnVsbCBzb3VyY2UgY29kZSBhdmFpbGFibGUgYXQgdGhpc1xuICAgICAgICAmbmJzcDs8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2FzaG90cGFobGV2YW55YW4vcHJvbWVybnN0YWNrLWJvb2tcIj5HaXRodWIgcmVwb3NpdG9yeTwvYT5cbiAgICAgIDwvc21hbGw+XG4gICAgPC9oNT5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQge1xuICBIb21lLFxuICBIZWFkZXIsXG4gIEZvb3Rlcixcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQWxlcnQsIENvbGxhcHNlIH0gZnJvbSAncmVhY3QtYm9vdHN0cmFwJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvYXN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5zaG93aW5nKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy5kaXNtaXNzVGltZXIpO1xuICAgICAgLy90aGlzLnNldFN0YXRlKHsgZGlzbWlzc1RpbWVyOiBzZXRUaW1lb3V0KHRoaXMucHJvcHMub25EaXNtaXNzLCA1MDAwKSB9KTtcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy5kaXNtaXNzVGltZXIpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q29sbGFwc2UgaW49e3RoaXMucHJvcHMuc2hvd2luZ30+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdmaXhlZCcsIHRvcDogMzAsXG4gICAgICAgICAgbGVmdDogMCwgcmlnaHQ6IDAsdGV4dEFsaWduOiAnY2VudGVyJyB9fT5cbiAgICAgICAgICA8QWxlcnRcbiAgICAgICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogNTAwIH19XG4gICAgICAgICAgICBic1N0eWxlPXt0aGlzLnByb3BzLmJzU3R5bGV9XG4gICAgICAgICAgICBvbkRpc21pc3M9e3RoaXMucHJvcHMub25EaXNtaXNzfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0aGlzLnByb3BzLm1lc3NhZ2V9XG4gICAgICAgICAgPC9BbGVydD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0NvbGxhcHNlPlxuICAgICk7XG4gIH1cbn1cblxuVG9hc3QucHJvcFR5cGVzID0ge1xuICBzaG93aW5nOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvbkRpc21pc3M6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGJzU3R5bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIG1lc3NhZ2U6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbn07XG5cblRvYXN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgYnNTdHlsZTogJ3N1Y2Nlc3MnLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRlSW5wdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgZGlzcGxheUZvcm1hdChkYXRlKSB7XG4gICAgcmV0dXJuIChkYXRlICE9IG51bGwgJiYgZGF0ZSAhPSAnJykgPyBuZXcgRGF0ZShkYXRlKS50b0RhdGVTdHJpbmcoKSA6ICcnO1xuICB9XG5cbiAgc3RhdGljIGVkaXRGb3JtYXQoZGF0ZSkge1xuICAgIHJldHVybiAoZGF0ZSAhPSBudWxsICAmJiBkYXRlICE9ICcnKSA/IChuZXcgRGF0ZShkYXRlKSkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApIDogJyc7XG4gIH1cblxuICBzdGF0aWMgdW5mb3JtYXQoc3RyKSB7XG4gICAgY29uc3QgdmFsID0gbmV3IERhdGUoc3RyKTtcbiAgICByZXR1cm4gTnVtYmVyLmlzTmFOKHZhbC5nZXRUaW1lKCkpID8gbnVsbCA6IHZhbDtcbiAgfVxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB2YWx1ZTogRGF0ZUlucHV0LmVkaXRGb3JtYXQocHJvcHMudmFsdWUpLFxuICAgICAgZm9jdXNlZDogZmFsc2UsXG4gICAgICB2YWxpZDogdHJ1ZSxcbiAgICB9O1xuXG4gICAgdGhpcy5vbkJsdXIgPSB0aGlzLm9uQmx1ci5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DaGFuZ2UgPSB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkZvY3VzID0gdGhpcy5vbkZvY3VzLmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5ld1Byb3BzKSB7XG4gICAgaWYgKG5ld1Byb3BzLnZhbHVlICE9PSB0aGlzLnByb3BzLnZhbHVlKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWU6IERhdGVJbnB1dC5lZGl0Rm9ybWF0KG5ld1Byb3BzLnZhbHVlKSB9KTtcbiAgICB9XG4gIH1cblxuICBvbkZvY3VzKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBmb2N1c2VkOiB0cnVlIH0pO1xuICB9XG5cbiAgb25CbHVyKGUpIHtcbiAgICBjb25zdCB2YWx1ZSA9IERhdGVJbnB1dC51bmZvcm1hdCh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICBjb25zdCB2YWxpZCA9IHRoaXMuc3RhdGUudmFsdWUgPT09ICcnIHx8IHZhbHVlICE9IG51bGw7XG4gICAgaWYgKHZhbGlkICE9PSB0aGlzLnN0YXRlLnZhbGlkICYmIHRoaXMucHJvcHMub25WYWxpZGl0eUNoYW5nZSkge1xuICAgICAgdGhpcy5wcm9wcy5vblZhbGlkaXR5Q2hhbmdlKGUsIHZhbGlkKTtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGZvY3VzZWQ6IGZhbHNlLCB2YWxpZCB9KTtcbiAgICBpZiAodmFsaWQpIHtcbiAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZSwgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2hhbmdlKGUpIHtcbiAgICBpZiAoZS50YXJnZXQudmFsdWUubWF0Y2goL15bXFxkLV0qJC8pKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWU6IGUudGFyZ2V0LnZhbHVlIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB2YWx1ZSA9ICh0aGlzLnN0YXRlLmZvY3VzZWQgfHwgIXRoaXMuc3RhdGUudmFsaWQpID8gdGhpcy5zdGF0ZS52YWx1ZSA6XG4gICAgICBEYXRlSW5wdXQuZGlzcGxheUZvcm1hdCh0aGlzLnByb3BzLnZhbHVlKTtcbiAgICBjb25zdCBjaGlsZFByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgZGVsZXRlIGNoaWxkUHJvcHMub25WYWxpZGl0eUNoYW5nZTtcbiAgICByZXR1cm4gKFxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgey4uLmNoaWxkUHJvcHN9XG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgcGxhY2Vob2xkZXI9e3RoaXMuc3RhdGUuZm9jdXNlZCA/ICd5eXl5LW1tLWRkJyA6IG51bGx9XG4gICAgICAgIG9uRm9jdXM9e3RoaXMub25Gb2N1c31cbiAgICAgICAgb25CbHVyPXt0aGlzLm9uQmx1cn1cbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cblxuRGF0ZUlucHV0LnByb3BUeXBlcyA9IHtcbiAgdmFsdWU6IFByb3BUeXBlcy5zaGFwZSh7fSkuaXNSZXF1aXJlZCxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG9uVmFsaWRpdHlDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn07XG5cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOdW1JbnB1dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBmb3JtYXQobnVtKSB7XG4gICAgcmV0dXJuIG51bSAhPSBudWxsID8gbnVtLnRvU3RyaW5nKCkgOiAnJztcbiAgfVxuXG4gIHN0YXRpYyB1bmZvcm1hdChzdHIpIHtcbiAgICBjb25zdCB2YWwgPSBwYXJzZUludChzdHIsIDEwKTtcbiAgICByZXR1cm4gTnVtYmVyLmlzTmFOKHZhbCkgPyBudWxsIDogdmFsO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0geyB2YWx1ZTogTnVtSW5wdXQuZm9ybWF0KHRoaXMucHJvcHMudmFsdWUpIH07XG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uQmx1ciA9IHRoaXMub25CbHVyLmJpbmQodGhpcyk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5ld1Byb3BzKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlOiBOdW1JbnB1dC5mb3JtYXQobmV3UHJvcHMudmFsdWUpIH0pO1xuICB9XG5cbiAgb25CbHVyKGUpIHtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKGUsIE51bUlucHV0LnVuZm9ybWF0KHRoaXMuc3RhdGUudmFsdWUpKTtcbiAgfVxuXG4gIG9uQ2hhbmdlKGUpIHtcbiAgICBpZiAoZS50YXJnZXQudmFsdWUubWF0Y2goL15cXGQqJC8pKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWU6IGUudGFyZ2V0LnZhbHVlIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfVxuICAgICAgICBvbkJsdXI9e3RoaXMub25CbHVyfVxuICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuXG5OdW1JbnB1dC5wcm9wVHlwZXMgPSB7XG4gIHZhbHVlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHtcbiAgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgQ29udHJvbExhYmVsLCBCdXR0b25Ub29sYmFyLFxuICBCdXR0b24sIFBhbmVsLCBGb3JtLCBDb2wsIEFsZXJ0XG59IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XG5cbmltcG9ydCB7IExpbmtDb250YWluZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItYm9vdHN0cmFwJztcblxuaW1wb3J0IE51bUlucHV0IGZyb20gJy4vTnVtSW5wdXQuanN4JztcbmltcG9ydCBEYXRlSW5wdXQgZnJvbSAnLi9EYXRlSW5wdXQuanN4JztcbmltcG9ydCBUb2FzdCBmcm9tICcuL1RvYXN0LmpzeCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElzc3VlRWRpdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgaXNzdWU6IHtcbiAgICAgICAgX2lkOiAnJyxcbiAgICAgICAgdGl0bGU6ICcnLFxuICAgICAgICBzdGF0dXM6ICcnLFxuICAgICAgICBvd25lcjogJycsXG4gICAgICAgIGVmZm9ydDogbnVsbCxcbiAgICAgICAgY29tcGxldGlvbkRhdGU6IG51bGwsXG4gICAgICAgIGNyZWF0ZWQ6IG51bGwsXG4gICAgICB9LFxuICAgICAgaW52YWxpZEZpZWxkczoge30sXG4gICAgICBzaG93aW5nVmFsaWRhdGlvbjogZmFsc2UsXG4gICAgICB0b2FzdFZpc2libGU6IGZhbHNlLFxuICAgICAgdG9hc3RNZXNzYWdlOiAnJyxcbiAgICAgIHRvYXN0VHlwZTogJ3N1Y2Nlc3MnLFxuICAgIH07XG5cbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMubG9hZERhdGEgPSB0aGlzLmxvYWREYXRhLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblZhbGlkaXR5Q2hhbmdlID0gdGhpcy5vblZhbGlkaXR5Q2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblN1Ym1pdCA9IHRoaXMub25TdWJtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmRpc21pc3NWYWxpZGF0aW9uID0gdGhpcy5kaXNtaXNzVmFsaWRhdGlvbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2hvd1ZhbGlkYXRpb24gPSB0aGlzLnNob3dWYWxpZGF0aW9uLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zaG93U3VjY2VzcyA9IHRoaXMuc2hvd1N1Y2Nlc3MuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNob3dFcnJvciA9IHRoaXMuc2hvd0Vycm9yLmJpbmQodGhpcyk7XG4gICAgdGhpcy5kaXNtaXNzVG9hc3QgPSB0aGlzLmRpc21pc3NUb2FzdC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5sb2FkRGF0YSgpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmIChwcmV2UHJvcHMubWF0Y2gucGFyYW1zLmlkICE9PSB0aGlzLnByb3BzLm1hdGNoLnBhcmFtcy5pZCkge1xuICAgICAgdGhpcy5sb2FkRGF0YSgpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ2hhbmdlKGV2ZW50LCBjb252ZXJ0ZWRWYWx1ZSkge1xuICAgIGNvbnN0IGlzc3VlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZS5pc3N1ZSk7XG4gICAgY29uc3QgdmFsdWUgPSAoY29udmVydGVkVmFsdWUgIT09IHVuZGVmaW5lZCkgP1xuICAgICAgY29udmVydGVkVmFsdWUgOiBldmVudC50YXJnZXQudmFsdWU7XG4gICAgaXNzdWVbZXZlbnQudGFyZ2V0Lm5hbWVdID0gdmFsdWU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGlzc3VlIH0pO1xuICB9XG5cbiAgb25WYWxpZGl0eUNoYW5nZShldmVudCwgdmFsaWQpIHtcbiAgICBjb25zdCBpbnZhbGlkRmllbGRzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZS5pbnZhbGlkRmllbGRzKTtcbiAgICBpZiAoIXZhbGlkKSB7XG4gICAgICBpbnZhbGlkRmllbGRzW2V2ZW50LnRhcmdldC5uYW1lXSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSBpbnZhbGlkRmllbGRzW2V2ZW50LnRhcmdldC5uYW1lXTtcbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGludmFsaWRGaWVsZHMgfSk7XG4gIH1cblxuICBzaG93VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2hvd2luZ1ZhbGlkYXRpb246IHRydWUgfSk7XG4gIH1cblxuICBkaXNtaXNzVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgc2hvd2luZ1ZhbGlkYXRpb246IGZhbHNlIH0pO1xuICB9XG5cbiAgc2hvd1N1Y2Nlc3MobWVzc2FnZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0b2FzdFZpc2libGU6IHRydWUsIHRvYXN0TWVzc2FnZTogbWVzc2FnZSwgdG9hc3RUeXBlOiAnc3VjY2VzcycgfSk7XG4gIH1cblxuICBzaG93RXJyb3IobWVzc2FnZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyB0b2FzdFZpc2libGU6IHRydWUsIHRvYXN0TWVzc2FnZTogbWVzc2FnZSwgdG9hc3RUeXBlOiAnZGFuZ2VyJyB9KTtcbiAgfVxuXG4gIGRpc21pc3NUb2FzdCgpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgdG9hc3RWaXNpYmxlOiBmYWxzZSB9KTtcbiAgfVxuXG4gIG9uU3VibWl0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnNob3dWYWxpZGF0aW9uKCk7XG5cbiAgICBpZiAoT2JqZWN0LmtleXModGhpcy5zdGF0ZS5pbnZhbGlkRmllbGRzKS5sZW5ndGggIT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmZXRjaChgL2FwaS9pc3N1ZXMvJHt0aGlzLnByb3BzLm1hdGNoLnBhcmFtcy5pZH1gLCB7XG4gICAgICBtZXRob2Q6ICdwdXQnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmlzc3VlKSxcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHJlc3BvbnNlLmpzb24oKS50aGVuKCh1cGRhdGVkSXNzdWUpID0+IHtcbiAgICAgICAgICB1cGRhdGVkSXNzdWUuY3JlYXRlZCA9IG5ldyBEYXRlKHVwZGF0ZWRJc3N1ZS5jcmVhdGVkKTtcbiAgICAgICAgICBpZiAodXBkYXRlZElzc3VlLmNvbXBsZXRpb25EYXRlKSB7XG4gICAgICAgICAgICB1cGRhdGVkSXNzdWUuY29tcGxldGlvbkRhdGUgPSBuZXcgRGF0ZSh1cGRhdGVkSXNzdWUuY29tcGxldGlvbkRhdGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNzdWU6IHVwZGF0ZWRJc3N1ZSB9KTtcbiAgICAgICAgICB0aGlzLnNob3dTdWNjZXNzKCdVcGRhdGVkIElzc3VlIFN1Y2Nlc3NmdWxseScpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICB0aGlzLnNob3dFcnJvcihgRXJyb3IgaW4gc2VuZGluZyBkYXRhIHRvIHNlcnZlcjogJHtlcnIubWVzc2FnZX1gKTtcbiAgICB9KTtcbiAgfVxuXG4gIGxvYWREYXRhKCkge1xuICAgIGZldGNoKGAvYXBpL2lzc3Vlcy8ke3RoaXMucHJvcHMubWF0Y2gucGFyYW1zLmlkfWApXG4gICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgcmVzcG9uc2UuanNvbigpLnRoZW4oKGlzc3VlKSA9PiB7XG4gICAgICAgICAgICBpc3N1ZS5jcmVhdGVkID0gbmV3IERhdGUoaXNzdWUuY3JlYXRlZCk7XG4gICAgICAgICAgICBpc3N1ZS5jb21wbGV0aW9uRGF0ZSA9IGlzc3VlLmNvbXBsZXRpb25EYXRlICE9IG51bGwgP1xuICAgICAgICAgICAgICBuZXcgRGF0ZShpc3N1ZS5jb21wbGV0aW9uRGF0ZSkudG9EYXRlU3RyaW5nKCkgOiAnJztcbiAgICAgICAgICAgIC8vIGlzc3VlLmVmZm9ydCA9IGlzc3VlLmVmZm9ydCAhPSBudWxsID8gaXNzdWUuZWZmb3J0LnRvU3RyaW5nKCkgOiAnJztcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc3N1ZSB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNwb25zZS5qc29uKCkudGhlbigoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2hvd0Vycm9yKGBGYWlsZWQgdG8gZmV0Y2ggaXNzdWUgOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgdGhpcy5zaG93RXJyb3IoYEVycm9yIGluIGZldGNoaW5nIGRhdGEgZnJvbSBzZXJ2ZXIgOiAke2Vyci5tZXNzYWdlfWApO1xuICAgICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgaXNzdWUgPSB0aGlzLnN0YXRlLmlzc3VlO1xuICAgIGxldCB2YWxpZGF0aW9uTWVzc2FnZSA9IG51bGw7XG4gICAgaWYoT2JqZWN0LmtleXModGhpcy5zdGF0ZS5pbnZhbGlkRmllbGRzKS5sZW5ndGggIT09IDBcbiAgICAgICYmIHRoaXMuc3RhdGUuc2hvd2luZ1ZhbGlkYXRpb24pIHtcbiAgICAgIHZhbGlkYXRpb25NZXNzYWdlID0gKFxuICAgICAgICA8QWxlcnRcbiAgICAgICAgICBic1N0eWxlPVwiZGFuZ2VyXCJcbiAgICAgICAgICBvbkRpc21pc3M9e3RoaXMuZGlzbWlzc1ZhbGlkYXRpb259XG4gICAgICAgID5cbiAgICAgICAgICBQbGVhc2UgY29ycmVjdCBpbnZhbGlkIGZpZWxkcyBiZWZvcmUgc3VibWl0dGluZy5cbiAgICAgICAgPC9BbGVydD5cbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8UGFuZWw+XG4gICAgICAgIDxQYW5lbC5IZWFkaW5nPkVkaXQgSXNzdWU8L1BhbmVsLkhlYWRpbmc+XG4gICAgICAgIDxQYW5lbC5Cb2R5PlxuICAgICAgICAgIDxGb3JtIGhvcml6b250YWwgb25TdWJtaXQ9e3RoaXMub25TdWJtaXR9PlxuICAgICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgICAgPENvbCBjb21wb25lbnRDbGFzcz17Q29udHJvbExhYmVsfSBzbT17M30+SUQ8L0NvbD5cbiAgICAgICAgICAgICAgPENvbCBzbT17OX0+XG4gICAgICAgICAgICAgICAgPEZvcm1Db250cm9sLlN0YXRpYz57aXNzdWUuX2lkfTwvRm9ybUNvbnRyb2wuU3RhdGljPlxuICAgICAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgICAgPENvbCBjb21wb25lbnRDbGFzcz17Q29udHJvbExhYmVsfSBzbT17M30+Q3JlYXRlZDwvQ29sPlxuICAgICAgICAgICAgICA8Q29sIHNtPXs5fT5cbiAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2wuU3RhdGljPlxuICAgICAgICAgICAgICAgICAge2lzc3VlLmNyZWF0ZWQgPyBpc3N1ZS5jcmVhdGVkLnRvRGF0ZVN0cmluZygpIDogJyd9XG4gICAgICAgICAgICAgICAgPC9Gb3JtQ29udHJvbC5TdGF0aWM+XG4gICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgICAgICA8Rm9ybUdyb3VwPlxuICAgICAgICAgICAgICA8Q29sIGNvbXBvbmVudENsYXNzPXtDb250cm9sTGFiZWx9IHNtPXszfT5TdGF0dXM8L0NvbD5cbiAgICAgICAgICAgICAgPENvbCBzbT17OX0+XG4gICAgICAgICAgICAgICAgPEZvcm1Db250cm9sXG4gICAgICAgICAgICAgICAgICBjb21wb25lbnRDbGFzcz1cInNlbGVjdFwiXG4gICAgICAgICAgICAgICAgICBuYW1lPVwic3RhdHVzXCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXtpc3N1ZS5zdGF0dXN9XG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTmV3XCI+TmV3PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiT3BlblwiPk9wZW48L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJBc3NpZ25lZFwiPkFzc2lnbmVkPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiRml4ZWRcIj5GaXhlZDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlZlcmlmaWVkXCI+VmVyaWZpZWQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJDbG9zZWRcIj5DbG9zZWQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgICAgPENvbCBjb21wb25lbnRDbGFzcz17Q29udHJvbExhYmVsfSBzbT17M30+T3duZXI8L0NvbD5cbiAgICAgICAgICAgICAgPENvbCBzbT17OX0+XG4gICAgICAgICAgICAgICAgPEZvcm1Db250cm9sXG4gICAgICAgICAgICAgICAgICBuYW1lPVwib3duZXJcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9e2lzc3VlLm93bmVyfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9Db2w+XG4gICAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgICAgIDxGb3JtR3JvdXA+XG4gICAgICAgICAgICAgIDxDb2wgY29tcG9uZW50Q2xhc3M9e0NvbnRyb2xMYWJlbH0gc209ezN9PkVmZm9ydDwvQ29sPlxuICAgICAgICAgICAgICA8Q29sIHNtPXs5fT5cbiAgICAgICAgICAgICAgICA8Rm9ybUNvbnRyb2xcbiAgICAgICAgICAgICAgICAgIGNvbXBvbmVudENsYXNzPXtOdW1JbnB1dH1cbiAgICAgICAgICAgICAgICAgIG5hbWU9XCJlZmZvcnRcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9e2lzc3VlLmVmZm9ydH1cbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgICAgICA8Rm9ybUdyb3VwIHZhbGlkYXRpb25TdGF0ZT17dGhpcy5zdGF0ZS5pbnZhbGlkRmllbGRzLmNvbXBsZXRpb25EYXRlID8gJ2Vycm9yJyA6ICcnfT5cbiAgICAgICAgICAgICAgPENvbCBjb21wb25lbnRDbGFzcz17Q29udHJvbExhYmVsfSBzbT17M30+Q29tcGxldGlvbiBEYXRlPC9Db2w+XG4gICAgICAgICAgICAgIDxDb2wgc209ezl9PlxuICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbFxuICAgICAgICAgICAgICAgICAgY29tcG9uZW50Q2xhc3M9e0RhdGVJbnB1dH1cbiAgICAgICAgICAgICAgICAgIG5hbWU9XCJjb21wbGV0aW9uRGF0ZVwiXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17aXNzdWUuY29tcGxldGlvbkRhdGV9XG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAgIG9uVmFsaWRpdHlDaGFuZ2U9e3RoaXMub25WYWxpZGl0eUNoYW5nZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxGb3JtQ29udHJvbC5GZWVkYmFjayAvPlxuICAgICAgICAgICAgICA8L0NvbD5cbiAgICAgICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgICAgPENvbCBjb21wb25lbnRDbGFzcz17Q29udHJvbExhYmVsfSBzbT17M30+VGl0bGU8L0NvbD5cbiAgICAgICAgICAgICAgPENvbCBzbT17OX0+XG4gICAgICAgICAgICAgICAgPEZvcm1Db250cm9sXG4gICAgICAgICAgICAgICAgICBuYW1lPVwidGl0bGVcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9e2lzc3VlLnRpdGxlfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9Db2w+XG4gICAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgICAgIDxGb3JtR3JvdXA+XG4gICAgICAgICAgICAgIDxDb2wgc21PZmZzZXQ9ezN9IHNtPXs2fT5cbiAgICAgICAgICAgICAgICA8QnV0dG9uVG9vbGJhcj5cbiAgICAgICAgICAgICAgICAgIDxCdXR0b24gYnNTdHlsZT1cInByaW1hcnlcIiB0eXBlPVwic3VibWl0XCI+U3VibWl0PC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICA8TGlua0NvbnRhaW5lciB0bz1cIi9pc3N1ZXNcIj5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBic1N0eWxlPVwibGlua1wiPkJhY2s8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIDwvTGlua0NvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICA8L0J1dHRvblRvb2xiYXI+XG4gICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgICAgICA8Rm9ybUdyb3VwPlxuICAgICAgICAgICAgICA8Q29sIHNtT2Zmc2V0PXszfSBzbT17OX0+e3ZhbGlkYXRpb25NZXNzYWdlfTwvQ29sPlxuICAgICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgICAgPC9Gb3JtPlxuICAgICAgICAgIDxUb2FzdFxuICAgICAgICAgICAgbWVzc2FnZT17dGhpcy5zdGF0ZS50b2FzdE1lc3NhZ2V9XG4gICAgICAgICAgICBic1N0eWxlPXt0aGlzLnN0YXRlLnRvYXN0VHlwZX1cbiAgICAgICAgICAgIHNob3dpbmc9e3RoaXMuc3RhdGUudG9hc3RWaXNpYmxlfVxuICAgICAgICAgICAgb25EaXNtaXNzPXt0aGlzLmRpc21pc3NUb2FzdH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L1BhbmVsLkJvZHk+XG4gICAgICA8L1BhbmVsPlxuICAgICk7XG4gIH1cbn1cblxuSXNzdWVFZGl0LnByb3BUeXBlcyA9IHtcbiAgbWF0Y2g6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcGFyYW1zOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgfSksXG4gIH0pLmlzUmVxdWlyZWQsXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge1xuICBDb2wsIFJvdywgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCxcbiAgQ29udHJvbExhYmVsLCBJbnB1dEdyb3VwLCBCdXR0b25Ub29sYmFyLCBCdXR0b24sXG59IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XG5cbmNsYXNzIElzc3VlRmlsdGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzdGF0dXM6IHByb3BzLmluaXRGaWx0ZXIuc3RhdHVzIHx8ICcnLFxuICAgICAgZWZmb3J0X2d0ZTogcHJvcHMuaW5pdEZpbHRlci5lZmZvcnRfZ3RlIHx8ICcnLFxuICAgICAgZWZmb3J0X2x0ZTogcHJvcHMuaW5pdEZpbHRlci5lZmZvcnRfbHRlIHx8ICcnLFxuICAgICAgY2hhbmdlZDogZmFsc2UsXG4gICAgfTtcblxuICAgIHRoaXMub25DaGFuZ2VTdGF0dXMgPSB0aGlzLm9uQ2hhbmdlU3RhdHVzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkNoYW5nZUVmZm9ydEd0ZSA9IHRoaXMub25DaGFuZ2VFZmZvcnRHdGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uQ2hhbmdlRWZmb3J0THRlID0gdGhpcy5vbkNoYW5nZUVmZm9ydEx0ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuYXBwbHlGaWx0ZXIgPSB0aGlzLmFwcGx5RmlsdGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5yZXNldEZpbHRlciA9IHRoaXMucmVzZXRGaWx0ZXIuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNsZWFyRmlsdGVyID0gdGhpcy5jbGVhckZpbHRlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXdQcm9wcykge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiBuZXdQcm9wcy5pbml0RmlsdGVyLnN0YXR1cyB8fCAnJyxcbiAgICAgIGVmZm9ydF9ndGU6IG5ld1Byb3BzLmluaXRGaWx0ZXIuZWZmb3J0X2d0ZSB8fCAnJyxcbiAgICAgIGVmZm9ydF9sdGU6IG5ld1Byb3BzLmluaXRGaWx0ZXIuZWZmb3J0X2x0ZSB8fCAnJyxcbiAgICAgIGNoYW5nZWQ6IGZhbHNlLFxuICAgIH0pO1xuICB9XG5cbiAgb25DaGFuZ2VTdGF0dXMoZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBzdGF0dXM6IGUudGFyZ2V0LnZhbHVlLCBjaGFuZ2VkOiB0cnVlIH0pO1xuICB9XG5cbiAgb25DaGFuZ2VFZmZvcnRHdGUoZSkge1xuICAgIGNvbnN0IGVmZm9ydFN0cmluZyA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIGlmIChlZmZvcnRTdHJpbmcubWF0Y2goL15cXGQqJC8pKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgZWZmb3J0X2d0ZTogZS50YXJnZXQudmFsdWUsIGNoYW5nZWQ6IHRydWUgfSk7XG4gICAgfVxuICB9XG5cbiAgb25DaGFuZ2VFZmZvcnRMdGUoZSkge1xuICAgIGNvbnN0IGVmZm9ydFN0cmluZyA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIGlmIChlZmZvcnRTdHJpbmcubWF0Y2goL15cXGQqJC8pKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgZWZmb3J0X2x0ZTogZS50YXJnZXQudmFsdWUsIGNoYW5nZWQ6IHRydWUgfSk7XG4gICAgfVxuICB9XG5cbiAgYXBwbHlGaWx0ZXIoKSB7XG4gICAgY29uc3QgbmV3RmlsdGVyID0ge307XG4gICAgaWYgKHRoaXMuc3RhdGUuc3RhdHVzKSB7XG4gICAgICBuZXdGaWx0ZXIuc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG4gICAgfVxuICAgIGlmICh0aGlzLnN0YXRlLmVmZm9ydF9ndGUpIHtcbiAgICAgIG5ld0ZpbHRlci5lZmZvcnRfZ3RlID0gdGhpcy5zdGF0ZS5lZmZvcnRfZ3RlO1xuICAgIH1cbiAgICBpZiAodGhpcy5zdGF0ZS5lZmZvcnRfbHRlKSB7XG4gICAgICBuZXdGaWx0ZXIuZWZmb3J0X2x0ZSA9IHRoaXMuc3RhdGUuZWZmb3J0X2x0ZTtcbiAgICB9XG4gICAgdGhpcy5wcm9wcy5zZXRGaWx0ZXIobmV3RmlsdGVyKTtcbiAgfVxuXG4gIGNsZWFyRmlsdGVyKCkge1xuICAgIHRoaXMucHJvcHMuc2V0RmlsdGVyKHt9KTtcbiAgfVxuXG4gIHJlc2V0RmlsdGVyKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiB0aGlzLnByb3BzLmluaXRGaWx0ZXIuc3RhdHVzIHx8ICcnLFxuICAgICAgZWZmb3J0X2d0ZTogdGhpcy5wcm9wcy5pbml0RmlsdGVyLmVmZm9ydF9ndGUgfHwgJycsXG4gICAgICBlZmZvcnRfbHRlOiB0aGlzLnByb3BzLmluaXRGaWx0ZXIuZWZmb3J0X2x0ZSB8fCAnJyxcbiAgICAgIGNoYW5nZWQ6IGZhbHNlLFxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Um93PlxuICAgICAgICA8Q29sIHhzPXs2fSBzbT17NH0gbWQ9ezN9IGxnPXsyfT5cbiAgICAgICAgICA8Rm9ybUdyb3VwPlxuICAgICAgICAgICAgPENvbnRyb2xMYWJlbD5TdGF0dXM8L0NvbnRyb2xMYWJlbD5cbiAgICAgICAgICAgIDxGb3JtQ29udHJvbFxuICAgICAgICAgICAgICBjb21wb25lbnRDbGFzcz1cInNlbGVjdFwiXG4gICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnN0YXR1c31cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25DaGFuZ2VTdGF0dXN9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj4oQW55KTwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiTmV3XCI+TmV3PC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJPcGVuXCI+T3Blbjwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiQXNzaWduZWRcIj5Bc3NpZ25lZDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiRml4ZWRcIj5GaXhlZDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiVmVyaWZpZWRcIj5WZXJpZmllZDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiQ2xvc2VkXCI+Q2xvc2VkPC9vcHRpb24+XG4gICAgICAgICAgICA8L0Zvcm1Db250cm9sPlxuICAgICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICA8L0NvbD5cbiAgICAgICAgPENvbCB4cz17Nn0gc209ezR9IG1kPXszfSBsZz17Mn0+XG4gICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgIDxDb250cm9sTGFiZWw+RWZmb3J0PC9Db250cm9sTGFiZWw+XG4gICAgICAgICAgICA8SW5wdXRHcm91cD5cbiAgICAgICAgICAgICAgPEZvcm1Db250cm9sXG4gICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuZWZmb3J0X2d0ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZUVmZm9ydEd0ZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPElucHV0R3JvdXAuQWRkb24+LTwvSW5wdXRHcm91cC5BZGRvbj5cbiAgICAgICAgICAgICAgPEZvcm1Db250cm9sXG4gICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuZWZmb3J0X2x0ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZUVmZm9ydEx0ZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvSW5wdXRHcm91cD5cbiAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgPC9Db2w+XG4gICAgICAgIDxDb2wgeHM9ezZ9IHNtPXs0fSBtZD17M30gbGc9ezN9PlxuICAgICAgICAgIDxGb3JtR3JvdXA+XG4gICAgICAgICAgICA8Q29udHJvbExhYmVsPiZuYnNwOzwvQ29udHJvbExhYmVsPlxuICAgICAgICAgICAgPEJ1dHRvblRvb2xiYXI+XG4gICAgICAgICAgICAgIDxCdXR0b24gYnNTdHlsZT1cInByaW1hcnlcIiBvbkNsaWNrPXt0aGlzLmFwcGx5RmlsdGVyfT5cbiAgICAgICAgICAgICAgQXBwbHlcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnJlc2V0RmlsdGVyfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5jaGFuZ2VkfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgUmVzZXRcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17dGhpcy5jbGVhckZpbHRlcn0+XG4gICAgICAgICAgICAgICAgQ2xlYXJcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8L0J1dHRvblRvb2xiYXI+XG4gICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgIDwvQ29sPlxuICAgICAgPC9Sb3c+XG4gICAgKTtcbiAgfVxufVxuXG5Jc3N1ZUZpbHRlci5wcm9wVHlwZXMgPSB7XG4gIHNldEZpbHRlcjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaW5pdEZpbHRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBzdGF0dXM6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBlZmZvcnRfZ3RlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgZWZmb3J0X2x0ZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB9KS5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgSXNzdWVGaWx0ZXI7XG4iLCIvLyAgJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEZvcm0sIEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIEJ1dHRvbiB9IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElzc3VlQWRkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5mb3Jtcy5pc3N1ZUFkZDtcbiAgICB0aGlzLnByb3BzLmNyZWF0ZUlzc3VlKHtcbiAgICAgIG93bmVyOiBmb3JtLm93bmVyLnZhbHVlLFxuICAgICAgdGl0bGU6IGZvcm0udGl0bGUudmFsdWUsXG4gICAgICBzdGF0dXM6ICdOZXcnLFxuICAgICAgY3JlYXRlZDogbmV3IERhdGUoKSxcbiAgICB9KTtcbiAgICAvLyBjbGVhciB0aGUgZm9ybSBmb3IgdGhlIG5leHQgaW5wdXRcbiAgICBmb3JtLm93bmVyLnZhbHVlID0gJyc7XG4gICAgZm9ybS50aXRsZS52YWx1ZSA9ICcnO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPEZvcm0gaW5saW5lIG5hbWU9XCJpc3N1ZUFkZFwiIG9uU3VibWl0PXt0aGlzLmhhbmRsZVN1Ym1pdH0+XG4gICAgICAgICAgPEZvcm1Hcm91cD5cbiAgICAgICAgICAgIDxGb3JtQ29udHJvbCBuYW1lPVwib3duZXJcIiBwbGFjZWhvbGRlcj1cIk93bmVyXCIgLz5cbiAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgICB7JyAnfVxuICAgICAgICAgIDxGb3JtR3JvdXA+XG4gICAgICAgICAgICA8Rm9ybUNvbnRyb2wgbmFtZT1cInRpdGxlXCIgcGxhY2Vob2xkZXI9XCJUaXRsZVwiIC8+XG4gICAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgICAgeycgJ31cbiAgICAgICAgICA8Rm9ybUdyb3VwPlxuICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCIgYnNTdHlsZT1cInByaW1hcnlcIj5BZGQ8L0J1dHRvbj5cbiAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgPC9Gb3JtPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5Jc3N1ZUFkZC5wcm9wVHlwZXMgPSB7XG4gIGNyZWF0ZUlzc3VlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJ3doYXR3Zy1mZXRjaCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgQnV0dG9uLCBUYWJsZSwgUGFuZWwgfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xuaW1wb3J0IEZvbnRBd2Vzb21lSWNvbiBmcm9tICdAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWUnO1xuaW1wb3J0IGZhVHJhc2hBbHQgZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLWZyZWUtc29saWQvZmFUcmFzaEFsdC5qcyc7XG5cbmltcG9ydCBJc3N1ZUFkZCBmcm9tICcuL0lzc3VlQWRkLmpzeCc7XG5pbXBvcnQgSXNzdWVGaWx0ZXIgZnJvbSAnLi9Jc3N1ZUZpbHRlci5qc3gnO1xuXG5jbGFzcyBJc3N1ZUxpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgY29uc3RydWN0UXVlcnkocXVlcnkpIHtcbiAgICBjb25zdCBzdGF0ID0gcXVlcnkuc3RhdHVzID8gYHN0YXR1cz0ke3F1ZXJ5LnN0YXR1c31gIDogJyc7XG4gICAgY29uc3QgZWZmb3J0R3RlID0gcXVlcnkuZWZmb3J0X2d0ZSA/IGAmZWZmb3J0X2d0ZT0ke3F1ZXJ5LmVmZm9ydF9ndGV9YCA6ICcnO1xuICAgIGNvbnN0IGVmZm9ydEx0ZSA9IHF1ZXJ5LmVmZm9ydF9sdGUgPyBgJmVmZm9ydF9sdGU9JHtxdWVyeS5lZmZvcnRfbHRlfWAgOiAnJztcbiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IGAke3N0YXR9JHtlZmZvcnRHdGV9JHtlZmZvcnRMdGV9YDtcbiAgICByZXR1cm4gc2VhcmNoUXVlcnk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBpc3N1ZXM6IFtdLFxuICAgICAgcXVlcnk6IHtcbiAgICAgICAgc3RhdHVzOiAnJyxcbiAgICAgICAgZWZmb3J0X2d0ZTogJycsXG4gICAgICAgIGVmZm9ydF9sdGU6ICcnLFxuICAgICAgfSxcbiAgICB9O1xuICAgIHRoaXMuY3JlYXRlSXNzdWUgPSB0aGlzLmNyZWF0ZUlzc3VlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5sb2FkRGF0YSA9IHRoaXMubG9hZERhdGEuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNldEZpbHRlciA9IHRoaXMuc2V0RmlsdGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5kZWxldGVJc3N1ZSA9IHRoaXMuZGVsZXRlSXNzdWUuYmluZCh0aGlzKTtcblxuICAgIHRoaXMuc2V0RmlsdGVyKHRoaXMuc3RhdGUucXVlcnkpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5sb2FkRGF0YSgpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGNvbnN0IG9sZFF1ZXJ5ID0gcHJldlByb3BzLmxvY2F0aW9uO1xuICAgIGNvbnN0IG5ld1F1ZXJ5ID0gdGhpcy5wcm9wcy5sb2NhdGlvbjtcblxuICAgIGlmIChvbGRRdWVyeS5zZWFyY2ggPT09IG5ld1F1ZXJ5LnNlYXJjaCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMubG9hZERhdGEoKTtcbiAgfVxuXG4gIHNldEZpbHRlcihxdWVyeSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcXVlcnksXG4gICAgfSk7XG5cbiAgICB0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG4gICAgICBwYXRobmFtZTogdGhpcy5wcm9wcy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaDogSXNzdWVMaXN0LmNvbnN0cnVjdFF1ZXJ5KHF1ZXJ5KSxcbiAgICAgIHF1ZXJ5LFxuICAgIH0pO1xuICB9XG5cbiAgbG9hZERhdGEoKSB7XG4gICAgZmV0Y2goYC9hcGkvaXNzdWVzJHt0aGlzLnByb3BzLmxvY2F0aW9uLnNlYXJjaH1gKS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHJlc3BvbnNlLmpzb24oKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgLy8gIGNvbnNvbGUubG9nKCdUb3RhbCBDb3VudCBvZiByZWNvcmRzOiAnLCBkYXRhLl9tZXRhZGF0YS50b3RhbF9jb3VudCk7XG4gICAgICAgICAgZGF0YS5yZWNvcmRzLmZvckVhY2goKGlzc3VlKSA9PiB7XG4gICAgICAgICAgICBpc3N1ZS5jcmVhdGVkID0gbmV3IERhdGUoaXNzdWUuY3JlYXRlZCk7XG4gICAgICAgICAgICBpZiAoaXNzdWUuY29tcGxldGlvbkRhdGUpIHtcbiAgICAgICAgICAgICAgaXNzdWUuY29tcGxldGlvbkRhdGUgPSBuZXcgRGF0ZShpc3N1ZS5jb21wbGV0aW9uRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGlzc3VlczogZGF0YS5yZWNvcmRzIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3BvbnNlLmpzb24oKS50aGVuKChlcnJvcikgPT4ge1xuICAgICAgICAgIGFsZXJ0KGBGYWlsZWQgdG8gZmV0Y2ggaXNzdWU6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgYWxlcnQoYEVycm9yIGluIGZldGNoaW5nIGRhdGEgZnJvbSBzZXJ2ZXIgKyAke2Vyci5tZXNzYWdlfWApO1xuICAgIH0pO1xuICB9XG5cbiAgY3JlYXRlSXNzdWUobmV3SXNzdWUpIHtcbiAgICBmZXRjaCgnL2FwaS9pc3N1ZXMvJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG5ld0lzc3VlKSxcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHJlc3BvbnNlLmpzb24oKS50aGVuKCh1cGRhdGVkSXNzdWUpID0+IHtcbiAgICAgICAgICB1cGRhdGVkSXNzdWUuY3JlYXRlZCA9IG5ldyBEYXRlKHVwZGF0ZWRJc3N1ZS5jcmVhdGVkKTtcbiAgICAgICAgICBpZiAodXBkYXRlZElzc3VlLmNvbXBsZXRpb25EYXRlKSB7XG4gICAgICAgICAgICB1cGRhdGVkSXNzdWUuY29tcGxldGlvbkRhdGUgPSBuZXcgRGF0ZSh1cGRhdGVkSXNzdWUuY29tcGxldGlvbkRhdGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBuZXdJc3N1ZXMgPSB0aGlzLnN0YXRlLmlzc3Vlcy5jb25jYXQodXBkYXRlZElzc3VlKTtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgaXNzdWVzOiBuZXdJc3N1ZXMgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzcG9uc2UuanNvbigpLnRoZW4oKGVycm9yKSA9PiB7XG4gICAgICAgICAgYWxlcnQoYEZhaWxlZCB0byBhZGQgaXNzdWU6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgYWxlcnQoYEVycm9yIGluIHNlbmRpbmcgRGF0YSB0byBzZXJ2ZXIgOiAke2Vyci5tZXNzYWdlfWApO1xuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlSXNzdWUoaWQpIHtcbiAgICBmZXRjaChgL2FwaS9pc3N1ZXMvJHtpZH1gLCB7IG1ldGhvZDogJ0RFTEVURScgfSkudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgYWxlcnQoJ0ZhaWxlZCB0byBkZWxldGUgaXNzdWUnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPFBhbmVsPlxuICAgICAgICAgIDxQYW5lbC5IZWFkaW5nPlxuICAgICAgICAgICAgPFBhbmVsLlRpdGxlIHRvZ2dsZT5cbiAgICAgICAgICAgICAgRmlsdGVyXG4gICAgICAgICAgICA8L1BhbmVsLlRpdGxlPlxuICAgICAgICAgIDwvUGFuZWwuSGVhZGluZz5cbiAgICAgICAgICA8UGFuZWwuQ29sbGFwc2U+XG4gICAgICAgICAgICA8UGFuZWwuQm9keT5cbiAgICAgICAgICAgICAgPElzc3VlRmlsdGVyXG4gICAgICAgICAgICAgICAgc2V0RmlsdGVyPXt0aGlzLnNldEZpbHRlcn1cbiAgICAgICAgICAgICAgICBpbml0RmlsdGVyPXt0aGlzLnN0YXRlLnF1ZXJ5fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9QYW5lbC5Cb2R5PlxuICAgICAgICAgIDwvUGFuZWwuQ29sbGFwc2U+XG4gICAgICAgIDwvUGFuZWw+XG4gICAgICAgIDxJc3N1ZVRhYmxlIGlzc3Vlcz17dGhpcy5zdGF0ZS5pc3N1ZXN9IGRlbGV0ZUlzc3VlPXt0aGlzLmRlbGV0ZUlzc3VlfSAvPlxuICAgICAgICA8SXNzdWVBZGQgY3JlYXRlSXNzdWU9e3RoaXMuY3JlYXRlSXNzdWV9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IElzc3VlUm93ID0gKHByb3BzKSA9PiB7XG4gIGZ1bmN0aW9uIG9uRGVsZXRlQ2xpY2soKSB7XG4gICAgcHJvcHMuZGVsZXRlSXNzdWUocHJvcHMuaXNzdWUuX2lkKTtcbiAgfVxuICByZXR1cm4gKFxuICAgIDx0cj5cbiAgICAgIDx0ZD5cbiAgICAgICAgPExpbmsgdG89e2AvaXNzdWVzLyR7cHJvcHMuaXNzdWUuX2lkfWB9Pntwcm9wcy5pc3N1ZS5faWQuc3Vic3RyKC00KX08L0xpbms+XG4gICAgICA8L3RkPlxuICAgICAgPHRkPntwcm9wcy5pc3N1ZS5zdGF0dXN9PC90ZD5cbiAgICAgIDx0ZD57cHJvcHMuaXNzdWUub3duZXJ9PC90ZD5cbiAgICAgIDx0ZD57cHJvcHMuaXNzdWUuY3JlYXRlZC50b0RhdGVTdHJpbmcoKX08L3RkPlxuICAgICAgPHRkPntwcm9wcy5pc3N1ZS5lZmZvcnR9PC90ZD5cbiAgICAgIDx0ZD57cHJvcHMuaXNzdWUuY29tcGxldGlvbkRhdGUgPyBwcm9wcy5pc3N1ZS5jb21wbGV0aW9uRGF0ZS50b0RhdGVTdHJpbmcoKSA6ICcnfTwvdGQ+XG4gICAgICA8dGQ+e3Byb3BzLmlzc3VlLnRpdGxlfTwvdGQ+XG4gICAgICA8dGQ+XG4gICAgICAgIDxCdXR0b24gYnNTaXplPVwieHNtYWxsXCIgb25DbGljaz17b25EZWxldGVDbGlja30+XG4gICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYVRyYXNoQWx0fSAvPlxuICAgICAgICA8L0J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgPC90cj5cbiAgKTtcbn07XG5cbmZ1bmN0aW9uIElzc3VlVGFibGUocHJvcHMpIHtcbiAgY29uc3QgaXNzdWVSb3dzID0gcHJvcHMuaXNzdWVzLm1hcChpc3N1ZSA9PlxuICAgIDxJc3N1ZVJvdyBrZXk9e2lzc3VlLl9pZH0gaXNzdWU9e2lzc3VlfSBkZWxldGVJc3N1ZT17cHJvcHMuZGVsZXRlSXNzdWV9IC8+KTtcbiAgcmV0dXJuIChcbiAgICA8VGFibGUgYm9yZGVyZWQgY29uZGVuc2VkIGhvdmVyIHJlc3BvbnNpdmU+XG4gICAgICA8dGhlYWQ+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICA8dGg+SWQ8L3RoPlxuICAgICAgICAgIDx0aD5TdGF0dXM8L3RoPlxuICAgICAgICAgIDx0aD5Pd25lcjwvdGg+XG4gICAgICAgICAgPHRoPkNyZWF0ZWQ8L3RoPlxuICAgICAgICAgIDx0aD5FZmZvcnQ8L3RoPlxuICAgICAgICAgIDx0aD5Db21wbGV0aW9uIGRhdGU8L3RoPlxuICAgICAgICAgIDx0aD5UaXRsZTwvdGg+XG4gICAgICAgICAgPHRoIC8+XG4gICAgICAgIDwvdHI+XG4gICAgICA8L3RoZWFkPlxuICAgICAgPHRib2R5PlxuICAgICAgICB7aXNzdWVSb3dzfVxuICAgICAgPC90Ym9keT5cbiAgICA8L1RhYmxlPlxuICApO1xufVxuXG5Jc3N1ZVJvdy5wcm9wVHlwZXMgPSB7XG4gIGlzc3VlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIG93bmVyOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBfaWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3RhdHVzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNyZWF0ZWQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZWZmb3J0OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNvbXBsZXRpb25EYXRlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KS5pc1JlcXVpcmVkLFxuICBkZWxldGVJc3N1ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbn07XG5cbklzc3VlVGFibGUucHJvcFR5cGVzID0ge1xuICBpc3N1ZXM6IFByb3BUeXBlcy5hcnJheU9mKHtcbiAgfSkuaXNSZXF1aXJlZCxcbiAgZGVsZXRlSXNzdWU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5Jc3N1ZUxpc3QucHJvcFR5cGVzID0ge1xuICBsb2NhdGlvbjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBwYXRobmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHNlYXJjaDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHF1ZXJ5OiBQcm9wVHlwZXMuc2hhcGUoe30pLmlzUmVxdWlyZWQsXG4gIH0pLmlzUmVxdWlyZWQsXG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgfSkuaXNSZXF1aXJlZCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IElzc3VlTGlzdDtcbiIsImltcG9ydCAnYmFiZWwtcG9seWZpbGwnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuLy9pbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAuY3NzJztcbi8vIGltcG9ydCAncmVhY3QtYm9vdHN0cmFwJztcbi8vIC8vaW1wb3J0ICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUvc3R5bGVzLmNzcyc7XG5pbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciwgUm91dGUsIFN3aXRjaCwgd2l0aFJvdXRlciAvKiBMaW5rLCBSZWRpcmVjdCAqLyB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IElzc3VlTGlzdCBmcm9tICcuL0lzc3VlTGlzdC5qc3gnO1xuaW1wb3J0IElzc3VlRWRpdCBmcm9tICcuL0lzc3VlRWRpdC5qc3gnO1xuaW1wb3J0IHsgSG9tZSwgSGVhZGVyLCBGb290ZXIgfSBmcm9tICcuL0NvbW1vbi5qc3gnO1xuaW1wb3J0IE5vdEZvdW5kIGZyb20gJy4vTm90Rm91bmQuanN4JztcbmltcG9ydCBBcnRpY2xlcyBmcm9tICcuL0FydGljbGVzLmpzeCc7XG5cblxuXG5jb25zdCBjb250ZW50Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50cycpO1xuXG5jb25zdCBSb3V0ZWRBcHAgPSAoKSA9PiAoXG4gIDxSb3V0ZXI+XG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgIDxIZWFkZXIgLz5cbiAgICAgIDxociAvPlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvXCIgY29tcG9uZW50PXtIb21lfSAvPlxuICAgICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9pc3N1ZXNcIiBjb21wb25lbnQ9e3dpdGhSb3V0ZXIoSXNzdWVMaXN0KX0gLz5cbiAgICAgICAgPFJvdXRlIGV4YWN0IHBhdGg9XCIvaXNzdWVzLzppZFwiIGNvbXBvbmVudD17SXNzdWVFZGl0fSAvPlxuICAgICAgICA8Um91dGUgcGF0aD1cIi9hcnRpY2xlc1wiIGNvbXBvbmVudD17QXJ0aWNsZXN9IC8+XG4gICAgICAgIDxSb3V0ZSBwYXRoPVwiLypcIiBjb21wb25lbnQ9e05vdEZvdW5kfSAvPlxuICAgICAgPC9Td2l0Y2g+XG4gICAgICA8Rm9vdGVyIC8+XG4gICAgPC9kaXY+XG4gIDwvUm91dGVyPlxuKTtcblxuUmVhY3RET00ucmVuZGVyKDxSb3V0ZWRBcHAgLz4sIGNvbnRlbnROb2RlKTtcblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=